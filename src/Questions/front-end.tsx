import { motion, AnimatePresence } from "framer-motion";
import React, { useEffect } from "react";
import {
  Code,
  FileJson,
  LayoutTemplate,
  FileTerminal,
  Globe,
  Blocks,
  Puzzle,
  Type,
  Workflow,
  TestTube,
  Rocket,
  Box,
  FormInput,
  Palette,
  ChevronLeft,
  ChevronRight,
  GitBranch,
  CheckCircle,
} from "lucide-react";
import { useContext, useState } from "react";
import { BgContext } from "../Context/bgContext";

// بيانات الأسئلة لكل مهارة
const quizData = [
  {
    title: "HTML",
    icon: <LayoutTemplate className="w-5 h-5 text-orange-400" />,
    questions: [
      {
        question: "ما هو الغرض من الوسوم الدلالية (مثل <article> و<section>) في HTML؟",
        options: [
          "لتنظيم المحتوى بصريًا دون دلالات دلالية.",
          "لإضافة معنى دلالي للمحتوى، مما يحسن إمكانية الوصول وSEO.",
          "لتحسين أداء تحميل الصفحة.",
          "لإنشاء روابط بين الصفحات."
        ],
        answer: "لإضافة معنى دلالي للمحتوى، مما يحسن إمكانية الوصول وSEO."
      },
      {
        question: "كيف يمكن إضافة صورة في HTML؟",
        options: [
          "باستخدام وسم <img> مع خاصية src.",
          "باستخدام وسم <picture> مع خاصية src.",
          "باستخدام وسم <image> مع خاصية href.",
          "باستخدام وسم <div> مع خاصية background-image."
        ],
        answer: "باستخدام وسم <img> مع خاصية src."
      },
      {
        question: "ما هي خاصية alt في وسم <img>؟",
        options: [
          "تُحدد عنوان URL للصورة.",
          "تُضيف وصفًا بصريًا للصورة لتحسين SEO.",
          "توفر نصًا بديلًا يظهر إذا لم تُحمل الصورة أو لقارئات الشاشة.",
          "تُغير حجم الصورة عند التحميل."
        ],
        answer: "توفر نصًا بديلًا يظهر إذا لم تُحمل الصورة أو لقارئات الشاشة."
      },
      {
        question: "ما الفرق بين <div> و<section>؟",
        options: [
          "<div> حاوية عامة، بينما <section> لها دلالة دلالية لتجميع المحتوى.",
          "<div> و<section> كلاهما دلاليان بنفس الطريقة.",
          "<section> حاوية عامة، بينما <div> لها دلالة دلالية.",
          "<div> تُستخدم للتنقل فقط."
        ],
        answer: "<div> حاوية عامة، بينما <section> لها دلالة دلالية لتجميع المحتوى."
      },
      {
        question: "كيف يمكن ربط ملف CSS بـ HTML؟",
        options: [
          "باستخدام وسم <style> داخل <head>.",
          "باستخدام وسم <link> داخل <head> مع خاصية href.",
          "باستخدام وسم <script> مع خاصية src.",
          "باستخدام خاصية style داخل <body>."
        ],
        answer: "باستخدام وسم <link> داخل <head> مع خاصية href."
      },
      {
        question: "ما هو وسم <meta> واستخداماته؟",
        options: [
          "يُستخدم لتحديد بيانات وصفية مثل charset أو viewport.",
          "يُستخدم لإضافة أنماط CSS مباشرة.",
          "يُستخدم لإنشاء روابط خارجية.",
          "يُستخدم لإضافة أزرار تفاعلية."
        ],
        answer: "يُستخدم لتحديد بيانات وصفية مثل charset أو viewport."
      },
      {
        question: "كيف يتم إنشاء نموذج في HTML؟",
        options: [
          "باستخدام وسم <form> مع عناصر مثل <input> و<button>.",
          "باستخدام وسم <table> مع <input>.",
          "باستخدام وسم <div> مع خاصية form.",
          "باستخدام وسم <section> مع خاصية input."
        ],
        answer: "باستخدام وسم <form> مع عناصر مثل <input> و<button>."
      },
      {
        question: "ما هو HTML5 Canvas؟",
        options: [
          "وسم لإنشاء نماذج تفاعلية.",
          "API لرسم الرسومات ثنائية الأبعاد باستخدام JavaScript.",
          "مكتبة لتحرير النصوص في HTML.",
          "خاصية لإضافة فيديوهات."
        ],
        answer: "API لرسم الرسومات ثنائية الأبعاد باستخدام JavaScript."
      },
      {
        question: "ما هي خاصية data-*؟",
        options: [
          "تُستخدم لتخزين بيانات مخصصة في العناصر.",
          "تُستخدم لتحديد أنماط CSS مباشرة.",
          "تُستخدم لإنشاء روابط خارجية.",
          "تُستخدم لتحديد حجم العنصر."
        ],
        answer: "تُستخدم لتخزين بيانات مخصصة في العناصر."
      },
      {
        question: "كيف يمكن تحسين إمكانية الوصول في HTML؟",
        options: [
          "باستخدام ARIA roles ووسوم دلالية مثل <nav> و<main>.",
          "باستخدام وسم <div> لكل العناصر.",
          "بتقليل استخدام الوسوم الدلالية.",
          "بإضافة المزيد من الصور."
        ],
        answer: "باستخدام ARIA roles ووسوم دلالية مثل <nav> و<main>."
      },
      {
        question: "ما هو وسم <article>؟",
        options: [
          "يُمثل محتوى مستقل يمكن توزيعه بشكل منفصل.",
          "يُستخدم لإنشاء روابط التنقل.",
          "يُمثل رأس الصفحة.",
          "يُستخدم لتحديد النصوص فقط."
        ],
        answer: "يُمثل محتوى مستقل يمكن توزيعه بشكل منفصل."
      },
      {
        question: "كيف يتم إضافة فيديو في HTML؟",
        options: [
          "باستخدام وسم <media> مع خاصية src.",
          "باستخدام وسم <video> مع خاصية src أو مصادر داخلية.",
          "باستخدام وسم <img> مع خاصية video.",
          "باستخدام وسم <div> مع خاصية background-video."
        ],
        answer: "باستخدام وسم <video> مع خاصية src أو مصادر داخلية."
      },
      {
        question: "ما هو وسم <header>؟",
        options: [
          "يُمثل رأس الصفحة أو القسم، يحتوي على عناصر تمهيدية.",
          "يُمثل تذييل الصفحة.",
          "يُستخدم لإنشاء نموذج تفاعلي.",
          "يُستخدم لتحديد الصور."
        ],
        answer: "يُمثل رأس الصفحة أو القسم، يحتوي على عناصر تمهيدية."
      },
      {
        question: "ما هي خاصية defer في وسم <script>؟",
        options: [
          "تؤخر تحميل الجافاسكربت حتى يتم تحميل DOM.",
          "تُسرّع تحميل الجافاسكربت قبل HTML.",
          "تُضيف أنماط CSS للسكربت.",
          "تُنشئ روابط خارجية للسكربت."
        ],
        answer: "تؤخر تحميل الجافاسكربت حتى يتم تحميل DOM."
      },
      {
        question: "ما الفرق بين inline وblock elements؟",
        options: [
          "inline تُعرض في نفس السطر، block تأخذ عرضًا كاملاً.",
          "block تُعرض في نفس السطر، inline تأخذ عرضًا كاملاً.",
          "inline وblock يعملان بنفس الطريقة.",
          "inline تُستخدم للصور فقط."
        ],
        answer: "inline تُعرض في نفس السطر، block تأخذ عرضًا كاملاً."
      },
      {
        question: "كيف يتم إنشاء جدول في HTML؟",
        options: [
          "باستخدام وسم <table> مع <tr>، <th>، و<td>.",
          "باستخدام وسم <form> مع <input>.",
          "باستخدام وسم <div> مع خاصية table.",
          "باستخدام وسم <section> مع خاصية grid."
        ],
        answer: "باستخدام وسم <table> مع <tr>، <th>، و<td>."
      },
      {
        question: "ما هو وسم <footer>؟",
        options: [
          "يُمثل رأس الصفحة.",
          "يُمثل تذييل الصفحة أو القسم، يحتوي على معلومات إضافية.",
          "يُستخدم لإنشاء روابط التنقل.",
          "يُستخدم لتحديد النصوص."
        ],
        answer: "يُمثل تذييل الصفحة أو القسم، يحتوي على معلومات إضافية."
      },
      {
        question: "ما هي خاصية contenteditable؟",
        options: [
          "تسمح بتحرير محتوى العنصر مباشرة من المتصفح.",
          "تُضيف أنماط CSS للعنصر.",
          "تُحدد حجم العنصر في الصفحة.",
          "تُنشئ روابط تفاعلية."
        ],
        answer: "تسمح بتحرير محتوى العنصر مباشرة من المتصفح."
      },
      {
        question: "كيف يتم ربط صفحة HTML بأخرى؟",
        options: [
          "باستخدام وسم <link> مع خاصية href.",
          "باستخدام وسم <a> مع خاصية href.",
          "باستخدام وسم <script> مع خاصية src.",
          "باستخدام وسم <div> مع خاصية link."
        ],
        answer: "باستخدام وسم <a> مع خاصية href."
      },
      {
        question: "ما هو وسم <main>؟",
        options: [
          "يُمثل المحتوى الرئيسي للصفحة، يُستخدم مرة واحدة.",
          "يُمثل تذييل الصفحة.",
          "يُستخدم لإنشاء نموذج تفاعلي.",
          "يُستخدم لتحديد الصور."
        ],
        answer: "يُمثل المحتوى الرئيسي للصفحة، يُستخدم مرة واحدة."
      }
    ]
  },
  {
    title: "CSS",
    icon: <FileJson className="w-5 h-5 text-blue-400" />,
    questions: [
      {
        question: "ما هو Flexbox؟",
        options: [
          "نظام تخطيط في CSS لإنشاء شبكات ثنائية الأبعاد.",
          "نظام تخطيط في CSS لترتيب العناصر في صف أو عمود بمرونة.",
          "خاصية في CSS لإدارة الرسوم المتحركة.",
          "نظام لتحديد محاذاة النصوص فقط."
        ],
        answer: "نظام تخطيط في CSS لترتيب العناصر في صف أو عمود بمرونة."
      },
      {
        question: "كيف يعمل CSS Grid؟",
        options: [
          "يوفر تخطيطًا ثنائي الأبعاد باستخدام الصفوف والأعمدة.",
          "يُستخدم لترتيب العناصر في صف واحد فقط.",
          "يُضيف انتقالات بصرية للعناصر.",
          "يُحدد ألوان الخلفية تلقائيًا."
        ],
        answer: "يوفر تخطيطًا ثنائي الأبعاد باستخدام الصفوف والأعمدة."
      },
      {
        question: "ما هي متغيرات CSS؟",
        options: [
          "خصائص لتحديد أنماط النصوص مباشرة.",
          "تُستخدم لتخزين قيم مثل الألوان باستخدام --variable-name.",
          "دوال لإنشاء رسوم متحركة.",
          "وسوم لتحديد تخطيط الصفحة."
        ],
        answer: "تُستخدم لتخزين قيم مثل الألوان باستخدام --variable-name."
      },
      {
        question: "ما الفرق بين position: absolute وrelative؟",
        options: [
          "absolute يعتمد على أقرب عنصر موقّع، بينما relative على موقعه الأصلي.",
          "relative يُزيل العنصر من التدفق، بينما absolute لا يفعل ذلك.",
          "absolute وrelative يعملان بنفس الطريقة.",
          "absolute يُستخدم للنصوص فقط."
        ],
        answer: "absolute يعتمد على أقرب عنصر موقّع، بينما relative على موقعه الأصلي."
      },
      {
        question: "كيف يتم إنشاء انتقال (transition)؟",
        options: [
          "باستخدام خاصية transition مع خصائص مثل duration وproperty.",
          "باستخدام خاصية animation مع @keyframes.",
          "باستخدام خاصية transform فقط.",
          "باستخدام media queries لتحديد الحركة."
        ],
        answer: "باستخدام خاصية transition مع خصائص مثل duration وproperty."
      },
      {
        question: "ما هو box-sizing؟",
        options: [
          "يُحدد ألوان الخلفية للعنصر.",
          "يحدد كيفية حساب أبعاد العنصر، مثل border-box.",
          "يُضيف ظلال للعناصر تلقائيًا.",
          "يُنشئ شبكات تخطيط في CSS."
        ],
        answer: "يحدد كيفية حساب أبعاد العنصر، مثل border-box."
      },
      {
        question: "كيف يتم تحقيق التصميم المتجاوب؟",
        options: [
          "باستخدام وحدات نسبية (%, vw, rem) وmedia queries.",
          "باستخدام وحدات ثابتة مثل px فقط.",
          "باستخدام JavaScript لتحديد الأحجام.",
          "بتقليل عدد العناصر في الصفحة."
        ],
        answer: "باستخدام وحدات نسبية (%, vw, rem) وmedia queries."
      },
      {
        question: "ما هي pseudo-classes؟",
        options: [
          "مثل ::before و::after، تُستخدم لإنشاء محتوى إضافي.",
          "مثل :hover و:first-child، تُستخدم لتحديد حالات العناصر.",
          "دوال لإنشاء رسوم متحركة.",
          "وسوم HTML لتحديد النصوص."
        ],
        answer: "مثل :hover و:first-child، تُستخدم لتحديد حالات العناصر."
      },
      {
        question: "كيف يتم تحسين أداء CSS؟",
        options: [
          "بتقليل التعقيد، استخدام selectors بسيطة، وتقليل الـ reflows.",
          "بإضافة المزيد من الرسوم المتحركة.",
          "باستخدام JavaScript لتحديد الأنماط.",
          "بتكرار قواعد CSS."
        ],
        answer: "بتقليل التعقيد، استخدام selectors بسيطة، وتقليل الـ reflows."
      },
      {
        question: "ما هو z-index؟",
        options: [
          "يحدد ترتيب تكديس العناصر في المحور Z.",
          "يُحدد حجم العنصر في الصفحة.",
          "يُضيف انتقالات بصرية للعناصر.",
          "يُنشئ شبكات تخطيط CSS."
        ],
        answer: "يحدد ترتيب تكديس العناصر في المحور Z."
      },
      {
        question: "كيف تعمل الرسوم المتحركة في CSS؟",
        options: [
          "باستخدام خاصية transition للحركات البسيطة.",
          "باستخدام @keyframes وخاصية animation.",
          "باستخدام JavaScript فقط لتحديد الحركة.",
          "باستخدام media queries لتحديد التوقيت."
        ],
        answer: "باستخدام @keyframes وخاصية animation."
      },
      {
        question: "ما الفرق بين margin وpadding؟",
        options: [
          "margin هو الهامش الداخلي، وpadding هو الهامش الخارجي.",
          "margin هو الهامش الخارجي، وpadding هو الهامش الداخلي.",
          "margin وpadding يعملان بنفس الطريقة.",
          "margin يُستخدم للنصوص فقط."
        ],
        answer: "margin هو الهامش الخارجي، وpadding هو الهامش الداخلي."
      },
      {
        question: "ما هي خاصية display؟",
        options: [
          "تُحدد نوع العرض مثل block، inline، أو flex.",
          "تُحدد لون الخلفية للعنصر.",
          "تُنشئ انتقالات بصرية تلقائية.",
          "تُضيف ظلال للعناصر."
        ],
        answer: "تُحدد نوع العرض مثل block، inline، أو flex."
      },
      {
        question: "كيف تُستخدم media queries؟",
        options: [
          "لتحديد أنماط بناءً على شروط مثل عرض الشاشة.",
          "لإنشاء رسوم متحركة تفاعلية.",
          "لتحديد ألوان النصوص فقط.",
          "لإضافة صور في الصفحة."
        ],
        answer: "لتحديد أنماط بناءً على شروط مثل عرض الشاشة."
      },
      {
        question: "ما هي pseudo-elements؟",
        options: [
          "مثل :hover و:first-child، تُستخدم لتحديد الحالات.",
          "مثل ::before و::after، تُستخدم لتنسيق أجزاء معينة.",
          "دوال JavaScript لتحديد الأنماط.",
          "وسوم HTML لتحديد النصوص."
        ],
        answer: "مثل ::before و::after، تُستخدم لتنسيق أجزاء معينة."
      },
      {
        question: "ما هو CSS specificity؟",
        options: [
          "نظام الأولوية لتحديد أي قاعدة تُطبق على العنصر.",
          "خاصية لتحديد حجم النص في CSS.",
          "نظام لإنشاء شبكات تخطيط.",
          "مكتبة لتحسين أداء CSS."
        ],
        answer: "نظام الأولوية لتحديد أي قاعدة تُطبق على العنصر."
      },
      {
        question: "كيف تُستخدم وحدة rem؟",
        options: [
          "وحدة ثابتة تعتمد على عرض الشاشة.",
          "وحدة نسبية تعتمد على حجم خط الجذر (root).",
          "وحدة لتحديد ألوان العناصر.",
          "وحدة لإنشاء شبكات تخطيط."
        ],
        answer: "وحدة نسبية تعتمد على حجم خط الجذر (root)."
      },
      {
        question: "ما هو CSS reset؟",
        options: [
          "إزالة الأنماط الافتراضية للمتصفح لضمان التوافق.",
          "إضافة أنماط افتراضية لتحسين الأداء.",
          "نظام لإنشاء رسوم متحركة.",
          "مكتبة لتحديد ألوان الصفحة."
        ],
        answer: "إزالة الأنماط الافتراضية للمتصفح لضمان التوافق."
      },
      {
        question: "كيف تُنشئ ظلال في CSS؟",
        options: [
          "باستخدام خاصية transform لتحديد الحركة.",
          "باستخدام خاصية box-shadow أو text-shadow.",
          "باستخدام خاصية transition للحركة.",
          "باستخدام وحدة rem لتحديد الحجم."
        ],
        answer: "باستخدام خاصية box-shadow أو text-shadow."
      },
      {
        question: "ما هي خاصية clip-path؟",
        options: [
          "تُستخدم لتحديد ألوان العناصر.",
          "تُستخدم لقص العناصر إلى أشكال مخصصة.",
          "تُستخدم لإضافة ظلال للعناصر.",
          "تُستخدم لتحديد حجم النصوص."
        ],
        answer: "تُستخدم لقص العناصر إلى أشكال مخصصة."
      }
    ]
  },
  {
    title: "JavaScript",
    icon: <FileTerminal className="w-5 h-5 text-yellow-300" />,
    questions: [
      {
        question: "ما هو الفرق بين let وconst؟",
        options: [
          "let وconst يعملان بنفس الطريقة.",
          "let يسمح بالتغيير، بينما const لا يسمح بإعادة التعيين.",
          "const يسمح بالتغيير، بينما let ثابت.",
          "let تُستخدم للدوال فقط."
        ],
        answer: "let يسمح بالتغيير، بينما const لا يسمح بإعادة التعيين."
      },
      {
        question: "كيف تعمل البرمجة غير المتزامنة؟",
        options: [
          "باستخدام دوال setTimeout فقط.",
          "باستخدام Promises أو async/await للتعامل مع العمليات المتأخرة.",
          "باستخدام دوال متزامنة فقط.",
          "باستخدام CSS لتحديد التوقيت."
        ],
        answer: "باستخدام Promises أو async/await للتعامل مع العمليات المتأخرة."
      },
      {
        question: "ما هو DOM؟",
        options: [
          "واجهة برمجية للتفاعل مع عناصر صفحة الويب.",
          "مكتبة JavaScript لتحسين الأداء.",
          "نظام لإنشاء أنماط CSS.",
          "خاصية لتحديد ألوان الصفحة."
        ],
        answer: "واجهة برمجية للتفاعل مع عناصر صفحة الويب."
      },
      {
        question: "ما هي closure في JavaScript؟",
        options: [
          "دالة تحتفظ بإمكانية الوصول إلى متغيرات نطاقها الخارجي.",
          "كائن لتخزين البيانات فقط.",
          "دالة تُنفذ فور تعريفها.",
          "خاصية لتحديد أنماط CSS."
        ],
        answer: "دالة تحتفظ بإمكانية الوصول إلى متغيرات نطاقها الخارجي."
      },
      {
        question: "كيف يعمل event delegation؟",
        options: [
          "إزالة مستمعي الأحداث من العناصر.",
          "إضافة مستمع أحداث إلى عنصر أب لمعالجة أحداث الأبناء.",
          "إنشاء أنماط CSS للأحداث.",
          "تحديد حجم النصوص بناءً على الأحداث."
        ],
        answer: "إضافة مستمع أحداث إلى عنصر أب لمعالجة أحداث الأبناء."
      },
      {
        question: "ما هو hoisting؟",
        options: [
          "إنشاء كائنات جديدة تلقائيًا.",
          "رفع إعلانات المتغيرات والدوال إلى أعلى النطاق.",
          "تحديد ألوان العناصر في JavaScript.",
          "إضافة ظلال للعناصر."
        ],
        answer: "رفع إعلانات المتغيرات والدوال إلى أعلى النطاق."
      },
      {
        question: "ما هي arrow functions؟",
        options: [
          "دوال تُستخدم في CSS فقط.",
          "دوال موجزة بدون this خاص بها، ترث من النطاق الأب.",
          "دوال تُنفذ بشكل متزامن فقط.",
          "دوال تُستخدم لتحديد النصوص."
        ],
        answer: "دوال موجزة بدون this خاص بها، ترث من النطاق الأب."
      },
      {
        question: "كيف يتم التعامل مع المصفوفات؟",
        options: [
          "باستخدام دوال مثل map، filter، وreduce.",
          "باستخدام CSS لتحديد ترتيب العناصر.",
          "باستخدام HTML لتخزين البيانات.",
          "بتقليل عدد العناصر يدويًا."
        ],
        answer: "باستخدام دوال مثل map، filter، وreduce."
      },
      {
        question: "ما هو JSON؟",
        options: [
          "تنسيق لتبادل البيانات، يُستخدم لتخزين ونقل الكائنات.",
          "مكتبة JavaScript لتحسين الأداء.",
          "خاصية CSS لتحديد الأنماط.",
          "وسم HTML لتحديد النصوص."
        ],
        answer: "تنسيق لتبادل البيانات، يُستخدم لتخزين ونقل الكائنات."
      },
      {
        question: "ما هي الـ prototype؟",
        options: [
          "آلية لإضافة خصائص ودوال إلى الكائنات.",
          "دالة لإنشاء رسوم متحركة.",
          "خاصية CSS لتحديد الأنماط.",
          "وسم HTML لتحديد النصوص."
        ],
        answer: "آلية لإضافة خصائص ودوال إلى الكائنات."
      },
      {
        question: "كيف تعمل الـ spread operator؟",
        options: [
          "تُستخدم لتحديد ألوان العناصر.",
          "تُستخدم لنشر عناصر المصفوفات أو الكائنات.",
          "تُستخدم لإنشاء شبكات تخطيط.",
          "تُستخدم لتحديد حجم النصوص."
        ],
        answer: "تُستخدم لنشر عناصر المصفوفات أو الكائنات."
      },
      {
        question: "ما الفرق بين null وundefined؟",
        options: [
          "null قيمة فارغة مُعينة، undefined غير مُعرف.",
          "null وundefined يعملان بنفس الطريقة.",
          "null تُستخدم للنصوص، undefined للدوال.",
          "undefined تُستخدم للكائنات فقط."
        ],
        answer: "null قيمة فارغة مُعينة، undefined غير مُعرف."
      },
      {
        question: "كيف يتم معالجة الأخطاء؟",
        options: [
          "باستخدام try/catch للتعامل مع الاستثناءات.",
          "باستخدام CSS لتحديد الأخطاء.",
          "باستخدام HTML لتسجيل الأخطاء.",
          "بتجاهل الأخطاء تلقائيًا."
        ],
        answer: "باستخدام try/catch للتعامل مع الاستثناءات."
      },
      {
        question: "ما هي event loop؟",
        options: [
          "آلية لإدارة العمليات غير المتزامنة في JavaScript.",
          "دالة لإنشاء رسوم متحركة.",
          "خاصية CSS لتحديد الأنماط.",
          "وسم HTML لتحديد الأحداث."
        ],
        answer: "آلية لإدارة العمليات غير المتزامنة في JavaScript."
      },
      {
        question: "كيف تُستخدم Promises؟",
        options: [
          "لإنشاء أنماط CSS تفاعلية.",
          "للتعامل مع العمليات غير المتزامنة باستخدام .then و.catch.",
          "لتحديد حجم النصوص في JavaScript.",
          "لإضافة صور في الصفحة."
        ],
        answer: "للتعامل مع العمليات غير المتزامنة باستخدام .then و.catch."
      },
      {
        question: "ما هي الـ IIFE؟",
        options: [
          "دالة تُنفذ فور تعريفها (Immediately Invoked Function Expression).",
          "دالة لتحديد أنماط CSS.",
          "وسم HTML لتحديد النصوص.",
          "مكتبة لتحسين الأداء."
        ],
        answer: "دالة تُنفذ فور تعريفها (Immediately Invoked Function Expression)."
      },
      {
        question: "كيف تُستخدم destructuring؟",
        options: [
          "لاستخراج قيم من المصفوفات أو الكائنات بسهولة.",
          "لتحديد ألوان النصوص في JavaScript.",
          "لإنشاء شبكات تخطيط CSS.",
          "لإضافة صور في الصفحة."
        ],
        answer: "لاستخراج قيم من المصفوفات أو الكائنات بسهولة."
      },
      {
        question: "ما هي Map وSet؟",
        options: [
          "دوال CSS لتحديد الأنماط.",
          "هياكل بيانات لتخزين القيم، Map للأزواج، Set للقيم الفريدة.",
          "وسوم HTML لتحديد النصوص.",
          "دوال لإنشاء رسوم متحركة."
        ],
        answer: "هياكل بيانات لتخزين القيم، Map للأزواج، Set للقيم الفريدة."
      },
      {
        question: "كيف يتم إنشاء كائن في JavaScript؟",
        options: [
          "باستخدام {} أو new Object() أو class.",
          "باستخدام وسم <div> في HTML.",
          "باستخدام خاصية CSS لتحديد الكائنات.",
          "باستخدام HTML لتخزين البيانات."
        ],
        answer: "باستخدام {} أو new Object() أو class."
      },
      {
        question: "ما هي الـ callback؟",
        options: [
          "خاصية CSS لتحديد الأنماط.",
          "دالة تُمرر كمعامل وتُنفذ لاحقًا.",
          "وسم HTML لتحديد الأحداث.",
          "مكتبة لتحسين الأداء."
        ],
        answer: "دالة تُمرر كمعامل وتُنفذ لاحقًا."
      }
    ]
  },
  {
    title: "ES6+",
    icon: <Code className="w-5 h-5 text-green-400" />,
    questions: [
      {
        question: "ما هي ميزة let وconst؟",
        options: [
          "let وconst يوفران نطاقًا على مستوى الكتلة، على عكس var.",
          "let يسمح بإعادة التعيين، بينما var لا يدعم الكتلة.",
          "const تُستخدم للدوال فقط.",
          "var وlet متماثلان تمامًا."
        ],
        answer: "let وconst يوفران نطاقًا على مستوى الكتلة، على عكس var."
      },
      {
        question: "كيف تُستخدم arrow functions؟",
        options: [
          "دوال تُستخدم لتحديد النصوص فقط.",
          "تُستخدم لكتابة دوال موجزة وترث this من النطاق الأب.",
          "دوال عادية مثل function declaration.",
          "تُستخدم لإنشاء كائنات مباشرة."
        ],
        answer: "تُستخدم لكتابة دوال موجزة وترث thisnsäأمن النطاق الأب."
      },
      {
        question: "ما هي template literals؟",
        options: [
          "سلاسل نصية عادية بدون تعبيرات.",
          "دوال لتكرار العناصر.",
          "سلاسل نصية تسمح بتضمين تعبيرات باستخدام ${}.",
          "كائنات لتخزين البيانات."
        ],
        answer: "سلاسل نصية تسمح بتضمين تعبيرات باستخدام ${}."
      },
      {
        question: "كيف تُستخدم destructuring؟",
        options: [
          "لإنشاء مصفوفات جديدة بسرعة.",
          "لإعادة ترتيب الكائنات فقط.",
          "لتجميع القيم في كائن واحد.",
          "لاستخراج القيم من المصفوفات أو الكائنات بسهولة."
        ],
        answer: "لاستخراج القيم من المصفوفات أو الكائنات بسهولة."
      },
      {
        question: "ما هي الـ default parameters؟",
        options: [
          "تُحدد قيمًا افتراضية للمعاملات في الدوال.",
          "تُستخدم لتحديد قيم ثابتة فقط.",
          "معاملات تُمرر تلقائيًا للكائنات.",
          "تُستخدم لتجميع الوسائط في مصفوفة."
        ],
        answer: "تُحدد قيمًا افتراضية للمعاملات في الدوال."
      },
      {
        question: "كيف تُستخدم rest parameters؟",
        options: [
          "تجميع الوسائط الإضافية في مصفوفة باستخدام ...param.",
          "تُستخدم لنشر عناصر المصفوفة.",
          "تُستخدم لتحديد قيم افتراضية.",
          "تُستخدم لإنشاء دوال موجزة."
        ],
        answer: "تجميع الوسائط الإضافية في مصفوفة باستخدام ...param."
      },
      {
        question: "ما هي spread operator؟",
        options: [
          "تُستخدم لتجميع الوسائط في كائن.",
          "تُستخدم لنشر عناصر المصفوفات أو الكائنات.",
          "تُستخدم لتحديد قيم افتراضية.",
          "تُستخدم لإنشاء دوال موجزة."
        ],
        answer: "تُستخدم لنشر عناصر المصفوفات أو الكائنات."
      },
      {
        question: "ما هي Promises؟",
        options: [
          "دوال تُستخدم لإنشاء كائنات.",
          "سلاسل نصية باستخدام ${}.",
          "كائنات تُمثل نتيجة عملية غير متزامنة.",
          "هياكل بيانات لتخزين القيم الفريدة."
        ],
        answer: "كائنات تُمثل نتيجة عملية غير متزامنة."
      },
      {
        question: "كيف تُستخدم async/await؟",
        options: [
          "لتبسيط التعامل مع Promises بكتابة كود يشبه المتزامن.",
          "لإنشاء مصفوفات جديدة.",
          "لتجميع الوسائط في مصفوفة.",
          "لإنشاء دوال موجزة."
        ],
        answer: "لتبسيط التعامل مع Promises بكتابة كود يشبه المتزامن."
      },
      {
        question: "ما هي modules؟",
        options: [
          "ملفات تُصدر/تستورد كودًا باستخدام import/export.",
          "كائنات لتخزين البيانات فقط.",
          "دوال لإنشاء مصفوفات.",
          "هياكل بيانات لتخزين القيم الفريدة."
        ],
        answer: "ملفات تُصدر/تستورد كودًا باستخدام import/export."
      },
      {
        question: "ما هي الـ class؟",
        options: [
          "صيغة لإنشاء كائنات مع خصائص ودوال باستخدام كلمة class.",
          "دوال لتكرار العناصر.",
          "هياكل بيانات لتخزين القيم.",
          "سلاسل نصية باستخدام ${}."
        ],
        answer: "صيغة لإنشاء كائنات مع خصائص ودوال باستخدام كلمة class."
      },
      {
        question: "كيف تُستخدم Map؟",
        options: [
          "هيكل بيانات لتخزين أزواج مفتاح/قيمة مع مفاتيح من أي نوع.",
          "تُستخدم لتكرار القيم القابلة للتكرار.",
          "تُستخدم لإنشاء دوال موجزة.",
          "تُستخدم لنشر عناصر المصفوفة."
        ],
        answer: "هيكل بيانات لتخزين أزواج مفتاح/قيمة مع مفاتيح من أي نوع."
      },
      {
        question: "ما هي Set؟",
        options: [
          "هيكل بيانات لتخزين قيم فريدة من أي نوع.",
          "تُستخدم لتخزين أزواج مفتاح/قيمة.",
          "تُستخدم لإنشاء مصفوفات جديدة.",
          "تُستخدم لنشر عناصر الكائنات."
        ],
        answer: "هيكل بيانات لتخزين قيم فريدة من أي نوع."
      },
      {
        question: "كيف تُستخدم for...of؟",
        options: [
          "للتكرار على القيم القابلة للتكرار مثل المصفوفات.",
          "لإنشاء كائنات جديدة.",
          "لتجميع الوسائط في مصفوفة.",
          "لإنشاء دوال موجزة."
        ],
        answer: "للتكرار على القيم القابلة للتكرار مثل المصفوفات."
      },
      {
        question: "ما هي Symbol؟",
        options: [
          "نوع بيانات فريد يُستخدم كمفتاح للكائنات.",
          "هيكل بيانات لتخزين القيم الفريدة.",
          "دالة لإنشاء مصفوفات جديدة.",
          "سلاسل نصية باستخدام ${}."
        ],
        answer: "نوع بيانات فريد يُستخدم كمفتاح للكائنات."
      },
      {
        question: "كيف تُستخدم Array.includes؟",
        options: [
          "للتحقق إذا كانت المصفوفة تحتوي على قيمة معينة.",
          "لإنشاء مصفوفة جديدة.",
          "لتجميع الوسائط في مصفوفة.",
          "لنشر عناصر المصفوفة."
        ],
        answer: "للتحقق إذا كانت المصفوفة تحتوي على قيمة معينة."
      },
      {
        question: "ما هي Array.find؟",
        options: [
          "تُرجع أول عنصر يطابق شرطًا معينًا.",
          "تُنشئ مصفوفة جديدة بجميع العناصر.",
          "تُستخدم لتكرار القيم القابلة للتكرار.",
          "تُستخدم لنشر عناصر المصفوفة."
        ],
        answer: "تُرجع أول عنصر يطابق شرطًا معينًا."
      },
      {
        question: "كيف تُستخدم Array.filter؟",
        options: [
          "تُستخدم لنشر عناصر المصفوفة.",
          "تُنشئ مصفوفة جديدة تحتوي على العناصر التي تطابق شرطًا.",
          "تُرجع أول عنصر يطابق شرطًا.",
          "تُستخدم لتجميع الوسائط."
        ],
        answer: "تُنشئ مصفوفة جديدة تحتوي على العناصر التي تطابق شرطًا."
      },
      {
        question: "ما هي Array.map؟",
        options: [
          "تُنشئ مصفوفة جديدة بنتائج استدعاء دالة لكل عنصر.",
          "تُرجع أول عنصر يطابق شرطًا.",
          "تُستخدم لتجميع الوسائط في مصفوفة.",
          "تُستخدم لنشر عناصر المصفوفة."
        ],
        answer: "تُنشئ مصفوفة جديدة بنتائج استدعاء دالة لكل عنصر."
      },
      {
        question: "كيف تُستخدم Array.reduce؟",
        options: [
          "تُحول المصفوفة إلى قيمة واحدة باستخدام دالة تراكمية.",
          "تُنشئ مصفوفة جديدة بجميع العناصر.",
          "تُرجع أول عنصر يطابق شرطًا.",
          "تُستخدم لنشر عناصر المصفوفة."
        ],
        answer: "تُحول المصفوفة إلى قيمة واحدة باستخدام دالة تراكمية."
      }
    ]
  },
  {
    title: "Asynchronous JavaScript",
    icon: <Workflow className="w-5 h-5 text-purple-400" />,
    questions: [
      {
        question: "ما هي البرمجة غير المتزامنة؟",
        options: [
          "تنفيذ العمليات دون انتظار اكتمالها باستخدام callbacks أو Promises.",
          "تنفيذ العمليات بشكل متزامن فقط.",
          "إنشاء كائنات جديدة تلقائيًا.",
          "تجميع الوسائط في مصفوفة."
        ],
        answer: "تنفيذ العمليات دون انتظار اكتمالها باستخدام callbacks أو Promises."
      },
      {
        question: "كيف تعمل الـ callback؟",
        options: [
          "دالة تُنفذ فور تعريفها.",
          "دالة تُمرر كمعامل وتُنفذ بعد اكتمال عملية.",
          "دالة لإنشاء مصفوفات جديدة.",
          "دالة لنشر عناصر المصفوفة."
        ],
        answer: "دالة تُمرر كمعامل وتُنفذ بعد اكتمال عملية."
      },
      {
        question: "ما هي Promises؟",
        options: [
          "هياكل بيانات لتخزين القيم الفريدة.",
          "كائنات تُمثل نتيجة عملية غير متزامنة (نجاح أو فشل).",
          "دوال لتكرار القيم القابلة للتكرار.",
          "سلاسل نصية باستخدام ${}."
        ],
        answer: "كائنات تُمثل نتيجة عملية غير متزامنة (نجاح أو فشل)."
      },
      {
        question: "كيف تُستخدم async/await؟",
        options: [
          "لإنشاء مصفوفات جديدة.",
          "لتبسيط التعامل مع Promises بكتابة كود يشبه المتزامن.",
          "لتجميع الوسائط في مصفوفة.",
          "لإنشاء دوال موجزة."
        ],
        answer: "لتبسيط التعامل مع Promises بكتابة كود يشبه المتزامن."
      },
      {
        question: "ما هي event loop؟",
        options: [
          "آلية لإدارة العمليات غير المتزامنة في JavaScript.",
          "دالة لإنشاء مصفوفات جديدة.",
          "هيكل بيانات لتخزين القيم.",
          "سلاسل نصية باستخدام ${}."
        ],
        answer: "آلية لإدارة العمليات غير المتزامنة في JavaScript."
      },
      {
        question: "كيف تُستخدم Promise.all؟",
        options: [
          "تُنفذ عدة Promises معًا وتُرجع نتائجها.",
          "تُرجع أول Promise يكتمل.",
          "تُنشئ Promise مرفوض.",
          "تُستخدم لإنشاء دوال موجزة."
        ],
        answer: "تُنفذ عدة Promises معًا وتُرجع نتائجها."
      },
      {
        question: "ما هي Promise.race؟",
        options: [
          "تُنشئ Promise مُكتمل.",
          "تُرجع نتيجة أول Promise يُكتمل (نجاحًا أو فشلاً).",
          "تُنفذ جميع Promises معًا.",
          "تُستخدم لتجميع الوسائط."
        ],
        answer: "تُرجع نتيجة أول Promise يُكتمل (نجاحًا أو فشلاً)."
      },
      {
        question: "كيف تُعالج الأخطاء في async/await؟",
        options: [
          "باستخدام try/catch للتعامل مع الاستثناءات.",
          "باستخدام .then فقط.",
          "بتجاهل الأخطاء تلقائيًا.",
          "باستخدام setTimeout."
        ],
        answer: "باستخدام try/catch للتعامل مع الاستثناءات."
      },
      {
        question: "ما هي setTimeout؟",
        options: [
          "دالة تُؤخر تنفيذ كود لفترة زمنية محددة.",
          "دالة تُكرر تنفيذ الكود.",
          "دالة لإنشاء مصفوفات جديدة.",
          "دالة لنشر عناصر المصفوفة."
        ],
        answer: "دالة تُؤخر تنفيذ كود لفترة زمنية محددة."
      },
      {
        question: "كيف تُستخدم setInterval؟",
        options: [
          "تُكرر تنفيذ كود على فترات زمنية محددة.",
          "تُؤخر تنفيذ الكود مرة واحدة.",
          "تُنشئ Promise مُكتمل.",
          "تُستخدم لنشر عناصر المصفوفة."
        ],
        answer: "تُكرر تنفيذ كود على فترات زمنية محددة."
      },
      {
        question: "ما هي الـ fetch API؟",
        options: [
          "واجهة لإجراء طلبات HTTP مثل GET وPOST.",
          "دالة لإنشاء مصفوفات جديدة.",
          "هيكل بيانات لتخزين القيم.",
          "سلاسل نصية باستخدام ${}."
        ],
        answer: "واجهة لإجراء طلبات HTTP مثل GET وPOST."
      },
      {
        question: "كيف تُستخدم Promise.resolve؟",
        options: [
          "تُنشئ Promise مُكتمل بقيمة معينة.",
          "تُنشئ Promise مرفوض.",
          "تُنفذ عدة Promises معًا.",
          "تُستخدم لتجميع الوسائط."
        ],
        answer: "تُنشئ Promise مُكتمل بقيمة معينة."
      },
      {
        question: "ما هي Promise.reject؟",
        options: [
          "تُنشئ Promise مُكتمل.",
          "تُنشئ Promise مرفوض بسبب معين.",
          "تُنفذ جميع Promises معًا.",
          "تُستخدم لنشر عناصر المصفوفة."
        ],
        answer: "تُنشئ Promise مرفوض بسبب معين."
      },
      {
        question: "كيف تُستخدم async في دوال؟",
        options: [
          "تُشير إلى أن الدالة تُرجع Promise وتدعم await.",
          "تُستخدم لإنشاء مصفوفات جديدة.",
          "تُستخدم لتجميع الوسائط.",
          "تُستخدم لنشر عناصر المصفوفة."
        ],
        answer: "تُشير إلى أن الدالة تُرجع Promise وتدعم await."
      },
      {
        question: "ما هي الـ microtask queue؟",
        options: [
          "قائمة تنتظر تنفيذ المهام الدقيقة مثل Promises.",
          "قائمة لتخزين القيم الفريدة.",
          "دالة لإنشاء مصفوفات جديدة.",
          "سلاسل نصية باستخدام ${}."
        ],
        answer: "قائمة تنتظر تنفيذ المهام الدقيقة مثل Promises."
      },
      {
        question: "كيف تُلغى عملية setTimeout؟",
        options: [
          "باستخدام clearTimeout مع معرف المهمة.",
          "باستخدام clearInterval.",
          "بتجاهل الكود تلقائيًا.",
          "باستخدام .then."
        ],
        answer: "باستخدام clearTimeout مع معرف المهمة."
      },
      {
        question: "ما هي الـ callback hell؟",
        options: [
          "تداخل الـ callbacks مما يجعل الكود صعب القراءة.",
          "دالة لإنشاء مصفوفات جديدة.",
          "هيكل بيانات لتخزين القيم.",
          "سلاسل نصية باستخدام ${}."
        ],
        answer: "تداخل الـ callbacks مما يجعل الكود صعب القراءة."
      },
      {
        question: "كيف تُستخدم Promise chaining؟",
        options: [
          "ربط عدة .then لتنفيذ عمليات متسلسلة.",
          "تُنفذ عدة Promises معًا.",
          "تُنشئ Promise مُكتمل.",
          "تُستخدم لنشر عناصر المصفوفة."
        ],
        answer: "ربط عدة .then لتنفيذ عمليات متسلسلة."
      },
      {
        question: "ما هي الـ async iteration؟",
        options: [
          "التكرار على بيانات غير متزامنة باستخدام for await...of.",
          "تكرار عادي باستخدام for...of.",
          "تجميع الوسائط في مصفوفة.",
          "إنشاء دوال موجزة."
        ],
        answer: "التكرار على بيانات غير متزامنة باستخدام for await...of."
      },
      {
        question: "كيف تُعالج الأخطاء في Promises؟",
        options: [
          "باستخدام .catch أو معالجة الرفض في .then.",
          "باستخدام try/catch فقط.",
          "بتجاهل الأخطاء تلقائيًا.",
          "باستخدام setTimeout."
        ],
        answer: "باستخدام .catch أو معالجة الرفض في .then."
      }
    ]
  },
  {
    title: "React",
    icon: <Blocks className="w-5 h-5 text-teal-300" />,
    questions: [
      {
        question: "ما هو JSX؟",
        options: [
          "صيغة تشبه HTML تُستخدم لكتابة واجهات React داخل JavaScript.",
          "مكتبة لتحسين أداء JavaScript.",
          "خاصية لتحديد الأنماط في CSS.",
          "وسم لإنشاء نماذج تفاعلية."
        ],
        answer: "صيغة تشبه HTML تُستخدم لكتابة واجهات React داخل JavaScript."
      },
      {
        question: "كيف تعمل useState؟",
        options: [
          "دالة لإنشاء كائنات جديدة.",
          "Hook لإدارة الحالة في المكونات الوظيفية.",
          "Hook لإجراء طلبات HTTP.",
          "دالة لتحديد الأنماط."
        ],
        answer: "Hook لإدارة الحالة في المكونات الوظيفية."
      },
      {
        question: "ما هو Virtual DOM؟",
        options: [
          "تمثيل حقيقي لـ DOM في المتصفح.",
          "تمثيل افتراضي لـ DOM يُحسن أداء التحديثات.",
          "مكتبة لإدارة الحالة.",
          "واجهة لإجراء طلبات HTTP."
        ],
        answer: "تمثيل افتراضي لـ DOM يُحسن أداء التحديثات."
      },
      {
        question: "ما الفرق بين props وstate؟",
        options: [
          "props وstate متماثلان تمامًا.",
          "state بيانات خارجية، props بيانات داخلية.",
          "props تُستخدم للحالة المعقدة فقط.",
          "props بيانات خارجية، state بيانات داخلية."
        ],
        answer: "props بيانات خارجية، state بيانات داخلية."
      },
      {
        question: "كيف يعمل useEffect؟",
        options: [
          "Hook لإدارة الحالة في المكونات.",
          "Hook للتعامل مع التأثيرات الجانبية مثل جلب البيانات.",
          "دالة لإنشاء كائنات جديدة.",
          "Hook لتحديد الأنماط."
        ],
        answer: "Hook للتعامل مع التأثيرات الجانبية مثل جلب البيانات."
      },
      {
        question: "ما هي custom hooks؟",
        options: [
          "دوال مخصصة تُعيد منطق قابل لإعادة الاستخدام.",
          "مكونات لإدارة الحالة فقط.",
          "دوال لإنشاء أنماط CSS.",
          "مكونات لإجراء طلبات HTTP."
        ],
        answer: "دوال مخصصة تُعيد منطق قابل لإعادة الاستخدام."
      },
      {
        question: "كيف يتم تمرير البيانات بين المكونات؟",
        options: [
          "عبر props أو Context API.",
          "باستخدام localStorage فقط.",
          "باستخدام CSS modules.",
          "باستخدام fetch API."
        ],
        answer: "عبر props أو Context API."
      },
      {
        question: "ما هو React Router؟",
        options: [
          "مكتبة لإدارة الحالة في React.",
          "مكتبة لإدارة التنقل بين الصفحات في تطبيقات React.",
          "إطار عمل لتحسين الأداء.",
          "مكتبة لإجراء طلبات HTTP."
        ],
        answer: "مكتبة لإدارة التنقل بين الصفحات في تطبيقات React."
      },
      {
        question: "كيف يتم تحسين أداء React؟",
        options: [
          "باستخدام memo، useCallback، وتقليل الـ re-renders.",
          "بإضافة المزيد من الحالات.",
          "بتكرار المكونات يدويًا.",
          "باستخدام CSS animations."
        ],
        answer: "باستخدام memo، useCallback، وتقليل الـ re-renders."
      },
      {
        question: "ما هي component lifecycle؟",
        options: [
          "مراحل مثل mounting، updating، وunmounting.",
          "دوال لإنشاء الحالة.",
          "مكتبة لإدارة التنقل.",
          "خاصية لتحديد الأنماط."
        ],
        answer: "مراحل مثل mounting، updating، وunmounting."
      },
      {
        question: "ما هو useReducer؟",
        options: [
          "Hook لإدارة الحالات المعقدة مشابه لـ Redux.",
          "Hook لإجراء طلبات HTTP.",
          "دالة لإنشاء كائنات جديدة.",
          "Hook لتحديد الأنماط."
        ],
        answer: "Hook لإدارة الحالات المعقدة مشابه لـ Redux."
      },
      {
        question: "كيف يعمل Context API؟",
        options: [
          "لإنشاء أنماط CSS عالمية.",
          "لتمرير البيانات عبر شجرة المكونات دون props.",
          "لإجراء طلبات HTTP.",
          "لإنشاء مكونات جديدة."
        ],
        answer: "لتمرير البيانات عبر شجرة المكونات دون props."
      },
      {
        question: "ما هي memo؟",
        options: [
          "دالة تمنع إعادة الرندر إذا لم تتغير props.",
          "دالة لإنشاء الحالة.",
          "مكتبة لإدارة التنقل.",
          "خاصية لتحديد الأنماط."
        ],
        answer: "دالة تمنع إعادة الرندر إذا لم تتغير props."
      },
      {
        question: "كيف تُستخدم useCallback؟",
        options: [
          "لمنع إعادة إنشاء الدوال عند الرندر.",
          "لإنشاء حالات جديدة.",
          "لإجراء طلبات HTTP.",
          "لتحديد أنماط CSS."
        ],
        answer: "لمنع إعادة إنشاء الدوال عند الرندر."
      },
      {
        question: "ما هي useMemo؟",
        options: [
          "لتحسين الأداء بحفظ نتائج العمليات الحسابية.",
          "لإنشاء دوال جديدة.",
          "لإدارة التنقل بين الصفحات.",
          "لتحديد أنماط CSS."
        ],
        answer: "لتحسين الأداء بحفظ نتائج العمليات الحسابية."
      },
      {
        question: "كيف تُستخدم PropTypes؟",
        options: [
          "للتحقق من نوع props في المكونات.",
          "لإنشاء أنماط CSS.",
          "لإجراء طلبات HTTP.",
          "لإنشاء مكونات جديدة."
        ],
        answer: "للتحقق من نوع props في المكونات."
      },
      {
        question: "ما هي higher-order components؟",
        options: [
          "دوال تُعيد مكونات مع وظائف إضافية.",
          "مكونات لإدارة الحالة فقط.",
          "دوال لإنشاء أنماط CSS.",
          "مكونات لإجراء طلبات HTTP."
        ],
        answer: "دوال تُعيد مكونات مع وظائف إضافية."
      },
      {
        question: "كيف تُستخدم React.Fragment؟",
        options: [
          "لإرجاع عدة عناصر دون إضافة عقدة إضافية.",
          "لإنشاء حالات جديدة.",
          "لإجراء طلبات HTTP.",
          "لتحديد أنماط CSS."
        ],
        answer: "لإرجاع عدة عناصر دون إضافة عقدة إضافية."
      },
      {
        question: "ما هي controlled components؟",
        options: [
          "مكونات تُدار قيمها بواسطة حالة React.",
          "مكونات تُدار بواسطة DOM مباشرة.",
          "مكونات لإنشاء أنماط CSS.",
          "مكونات لإجراء طلبات HTTP."
        ],
        answer: "مكونات تُدار قيمها بواسطة حالة React."
      },
      {
        question: "ما هي uncontrolled components؟",
        options: [
          "مكونات تُدار بواسطة حالة React.",
          "مكونات تُدار قيمها بواسطة DOM مباشرة.",
          "مكونات لإنشاء أنماط CSS.",
          "مكونات لإجراء طلبات HTTP."
        ],
        answer: "مكونات تُدار قيمها بواسطة DOM مباشرة."
      }
    ]
  },
  {
    title: "Next.js",
    icon: <Rocket className="w-5 h-5 text-gray-300" />,
    questions: [
      {
        question: "ما هو Next.js؟",
        options: [
          "إطار عمل React لتطوير تطبيقات SSR وSSG.",
          "مكتبة لإدارة الحالة في React.",
          "إطار عمل لإنشاء أنماط CSS.",
          "مكتبة لإجراء طلبات HTTP."
        ],
        answer: "إطار عمل React لتطوير تطبيقات SSR وSSG."
      },
      {
        question: "ما هي الـ SSR؟",
        options: [
          "Client-Side Rendering لعرض الصفحات في المتصفح.",
          "Server-Side Rendering، عرض الصفحات على الخادم.",
          "Static Site Generation لإنشاء صفحات ديناميكية.",
          "واجهة لإجراء طلبات HTTP."
        ],
        answer: "Server-Side Rendering، عرض الصفحات على الخادم."
      },
      {
        question: "ما هي الـ SSG؟",
        options: [
          "Server-Side Rendering لعرض الصفحات على الخادم.",
          "Static Site Generation، إنشاء صفحات ثابتة عند البناء.",
          "Client-Side Rendering لعرض الصفحات في المتصفح.",
          "واجهة لإدارة الحالة."
        ],
        answer: "Static Site Generation، إنشاء صفحات ثابتة عند البناء."
      },
      {
        question: "كيف يعمل getStaticProps؟",
        options: [
          "يجلب البيانات في وقت الطلب.",
          "يُصدر بيانات للصفحات الثابتة عند البناء.",
          "يُحدد المسارات الديناميكية.",
          "يُنشئ نقاط نهاية API."
        ],
        answer: "يُصدر بيانات للصفحات الثابتة عند البناء."
      },
      {
        question: "ما هو getServerSideProps؟",
        options: [
          "يجلب البيانات في وقت الطلب لـ SSR.",
          "يُصدر بيانات للصفحات الثابتة.",
          "يُحدد المسارات الديناميكية.",
          "يُنشئ نقاط نهاية API."
        ],
        answer: "يجلب البيانات في وقت الطلب لـ SSR."
      },
      {
        question: "كيف يعمل getStaticPaths؟",
        options: [
          "يجلب البيانات في وقت الطلب.",
          "يُحدد المسارات الديناميكية لـ SSG.",
          "يُصدر بيانات للصفحات الثابتة.",
          "يُنشئ نقاط نهاية API."
        ],
        answer: "يُحدد المسارات الديناميكية لـ SSG."
      },
      {
        question: "ما هي API Routes؟",
        options: [
          "وظائف خادم تُنشئ نقاط نهاية API داخل Next.js.",
          "مكونات لإدارة الحالة.",
          "دوال لإنشاء أنماط CSS.",
          "مكونات لإجراء طلبات HTTP."
        ],
        answer: "وظائف خادم تُنشئ نقاط نهاية API داخل Next.js."
      },
      {
        question: "كيف يتم التنقل في Next.js؟",
        options: [
          "باستخدام مكون Link أو useRouter.",
          "باستخدام CSS transitions.",
          "باستخدام fetch API.",
          "باستخدام localStorage."
        ],
        answer: "باستخدام مكون Link أو useRouter."
      },
      {
        question: "ما هي Image Optimization؟",
        options: [
          "ميزة لتحسين الصور تلقائيًا في Next.js.",
          "مكتبة لإدارة الحالة.",
          "خاصية لتحديد الأنماط.",
          "واجهة لإجراء طلبات HTTP."
        ],
        answer: "ميزة لتحسين الصور تلقائيًا في Next.js."
      },
      {
        question: "كيف تُستخدم useRouter؟",
        options: [
          "Hook لإدارة الحالة في Next.js.",
          "Hook للوصول إلى كائن الموجه وإدارة التنقل.",
          "دالة لإنشاء أنماط CSS.",
          "Hook لإجراء طلبات HTTP."
        ],
        answer: "Hook للوصول إلى كائن الموجه وإدارة التنقل."
      },
      {
        question: "ما هي الـ middleware؟",
        options: [
          "وظائف تُنفذ قبل معالجة الطلبات.",
          "مكونات لإدارة الحالة.",
          "دوال لإنشاء أنماط CSS.",
          "مكونات لإجراء طلبات HTTP."
        ],
        answer: "وظائف تُنفذ قبل معالجة الطلبات."
      },
      {
        question: "كيف يتم تحسين SEO في Next.js؟",
        options: [
          "باستخدام Head وSSG/SSR لبيانات وصفية.",
          "بإضافة المزيد من الصور.",
          "بتكرار المكونات يدويًا.",
          "باستخدام CSS animations."
        ],
        answer: "باستخدام Head وSSG/SSR لبيانات وصفية."
      },
      {
        question: "ما هي Incremental Static Regeneration؟",
        options: [
          "إعادة إنشاء الصفحات الثابتة ديناميكيًا.",
          "عرض الصفحات على الخادم.",
          "إنشاء نقاط نهاية API.",
          "إدارة الحالة في Next.js."
        ],
        answer: "إعادة إنشاء الصفحات الثابتة ديناميكيًا."
      },
      {
        question: "كيف تُدمج TypeScript مع Next.js؟",
        options: [
          "بإضافة ملف tsconfig.json ومكونات TypeScript.",
          "باستخدام CSS modules.",
          "باستخدام fetch API.",
          "باستخدام localStorage."
        ],
        answer: "بإضافة ملف tsconfig.json ومكونات TypeScript."
      },
      {
        question: "ما هي الـ preview mode؟",
        options: [
          "وضع لمعاينة البيانات قبل النشر.",
          "وضع لإدارة الحالة.",
          "وضع لإنشاء أنماط CSS.",
          "وضع لإجراء طلبات HTTP."
        ],
        answer: "وضع لمعاينة البيانات قبل النشر."
      },
      {
        question: "كيف يعمل next.config.js؟",
        options: [
          "ملف لتخصيص إعدادات Next.js.",
          "ملف لإدارة الحالة.",
          "ملف لإنشاء أنماط CSS.",
          "ملف لإجراء طلبات HTTP."
        ],
        answer: "ملف لتخصيص إعدادات Next.js."
      },
      {
        question: "ما هي App Router؟",
        options: [
          "نظام توجيه جديد في Next.js 13 يعتمد على المجلدات.",
          "مكتبة لإدارة الحالة.",
          "خاصية لتحديد الأنماط.",
          "واجهة لإجراء طلبات HTTP."
        ],
        answer: "نظام توجيه جديد في Next.js 13 يعتمد على المجلدات."
      },
      {
        question: "كيف تُستخدم Dynamic Routes؟",
        options: [
          "بإنشاء ملفات بأسماء ديناميكية مثل [id].js.",
          "باستخدام CSS modules.",
          "باستخدام fetch API.",
          "باستخدام localStorage."
        ],
        answer: "بإنشاء ملفات بأسماء ديناميكية مثل [id].js."
      },
      {
        question: "ما هي Server Components؟",
        options: [
          "مكونات تُنفذ على الخادم لتحسين الأداء.",
          "مكونات لإدارة الحالة.",
          "مكونات لإنشاء أنماط CSS.",
          "مكونات لإجراء طلبات HTTP."
        ],
        answer: "مكونات تُنفذ على الخادم لتحسين الأداء."
      },
      {
        question: "كيف تُدمج CSS في Next.js؟",
        options: [
          "باستخدام CSS Modules أو مكتبات مثل Tailwind.",
          "باستخدام JavaScript فقط.",
          "باستخدام fetch API.",
          "باستخدام localStorage."
        ],
        answer: "باستخدام CSS Modules أو مكتبات مثل Tailwind."
      }
    ]
  },
  {
    title: "Angular",
    icon: <Globe className="w-5 h-5 text-red-400" />,
    questions: [
      {
        question: "ما هو Angular؟",
        options: [
          "إطار عمل لتطوير تطبيقات ويب ديناميكية.",
          "مكتبة لإدارة الحالة مثل Redux.",
          "إطار عمل لإنشاء أنماط CSS فقط.",
          "واجهة لإجراء طلبات HTTP مباشرة."
        ],
        answer: "إطار عمل لتطوير تطبيقات ويب ديناميكية."
      },
      {
        question: "ما هي الـ components؟",
        options: [
          "مكونات لإنشاء أنماط CSS عالمية.",
          "مكونات تحتوي على العرض والمنطق لجزء من الواجهة.",
          "مكونات لإجراء طلبات HTTP فقط.",
          "مكونات لإدارة الحالة بشكل مستقل."
        ],
        answer: "مكونات تحتوي على العرض والمنطق لجزء من الواجهة."
      },
      {
        question: "كيف يعمل data binding؟",
        options: [
          "إنشاء كائنات جديدة تلقائيًا في القالب.",
          "إجراء طلبات HTTP لجلب البيانات.",
          "ربط البيانات بين القالب والمكون بطرق مثل {{}}.",
          "إنشاء أنماط CSS ديناميكية."
        ],
        answer: "ربط البيانات بين القالب والمكون بطرق مثل {{}}."
      },
      {
        question: "ما هي الـ directives؟",
        options: [
          "مكونات لإدارة الحالة في التطبيق.",
          "دوال لإنشاء أنماط CSS مخصصة.",
          "مكونات لإجراء طلبات HTTP.",
          "تعليمات تُضيف سلوكًا إلى العناصر مثل *ngFor."
        ],
        answer: "تعليمات تُضيف سلوكًا إلى العناصر مثل *ngFor."
      },
      {
        question: "كيف تُستخدم *ngIf؟",
        options: [
          "لعرض/إخفاء العناصر بناءً على شرط.",
          "لتكرار العناصر في قائمة مثل المصفوفات.",
          "لإنشاء أنماط CSS ديناميكية.",
          "لإجراء طلبات HTTP في القالب."
        ],
        answer: "لعرض/إخفاء العناصر بناءً على شرط."
      },
      {
        question: "ما هي الـ modules؟",
        options: [
          "دوال لإنشاء أنماط CSS مخصصة.",
          "حاويات لتنظيم المكونات والخدمات.",
          "مكونات لإجراء طلبات HTTP فقط.",
          "مكونات لإدارة الحالة بشكل مركزي."
        ],
        answer: "حاويات لتنظيم المكونات والخدمات."
      },
      {
        question: "ما هي الـ services؟",
        options: [
          "خدمات تُستخدم لمشاركة البيانات والمنطق بين المكونات.",
          "مكونات لإنشاء واجهات المستخدم.",
          "تعليمات لإضافة سلوك إلى العناصر.",
          "دوال لإنشاء أنماط CSS."
        ],
        answer: "خدمات تُستخدم لمشاركة البيانات والمنطق بين المكونات."
      },
      {
        question: "كيف تعمل dependency injection في Angular؟",
        options: [
          "إنشاء كائنات جديدة تلقائيًا في القالب.",
          "توفير الخدمات للمكونات عبر الحقن في المُنشئ.",
          "إجراء طلبات HTTP مباشرة.",
          "إنشاء أنماط CSS ديناميكية."
        ],
        answer: "توفير الخدمات للمكونات عبر الحقن في المُنشئ."
      },
      {
        question: "ما هي الـ pipes؟",
        options: [
          "دوال لإنشاء مكونات جديدة.",
          "أدوات لتحويل البيانات في القوالب مثل {{ value | uppercase }}.",
          "خدمات لإجراء طلبات HTTP.",
          "تعليمات لتكرار العناصر."
        ],
        answer: "أدوات لتحويل البيانات في القوالب مثل {{ value | uppercase }}."
      },
      {
        question: "ما هو الـ routing في Angular؟",
        options: [
          "مكونات لإنشاء أنماط CSS.",
          "نظام للتنقل بين الصفحات باستخدام RouterModule.",
          "خدمات لإدارة الحالة.",
          "تعليمات لإضافة سلوك إلى العناصر."
        ],
        answer: "نظام للتنقل بين الصفحات باستخدام RouterModule."
      },
      {
        question: "كيف تُستخدم *ngFor؟",
        options: [
          "لتكرار العناصر في قائمة بناءً على مصفوفة.",
          "لعرض/إخفاء العناصر بناءً على شرط.",
          "لإنشاء أنماط CSS ديناميكية.",
          "لإجراء طلبات HTTP في القالب."
        ],
        answer: "لتكرار العناصر في قائمة بناءً على مصفوفة."
      },
      {
        question: "ما هي Reactive Forms؟",
        options: [
          "نماذج تُدار يدويًا عبر DOM مباشرة.",
          "نماذج تُدار بواسطة كائنات FormControl وFormGroup.",
          "تعليمات لإضافة سلوك إلى النماذج.",
          "دوال لإنشاء أنماط CSS للنماذج."
        ],
        answer: "نماذج تُدار بواسطة كائنات FormControl وFormGroup."
      },
      {
        question: "ما هي Template-driven Forms؟",
        options: [
          "نماذج تعتمد على القوالب باستخدام ngModel.",
          "نماذج تُدار بواسطة FormControl فقط.",
          "نماذج تُنشئ أنماط CSS تلقائيًا.",
          "نماذج لإجراء طلبات HTTP مباشرة."
        ],
        answer: "نماذج تعتمد على القوالب باستخدام ngModel."
      },
      {
        question: "ما هو HttpClient في Angular؟",
        options: [
          "مكون لإنشاء واجهات المستخدم.",
          "خدمة لإجراء طلبات HTTP مثل GET وPOST.",
          "تعليمات لإضافة سلوك إلى العناصر.",
          "دالة لإنشاء أنماط CSS."
        ],
        answer: "خدمة لإجراء طلبات HTTP مثل GET وPOST."
      },
      {
        question: "ما هي lifecycle hooks؟",
        options: [
          "دوال مثل ngOnInit تُنفذ في مراحل حياة المكون.",
          "خدمات لإدارة الحالة في التطبيق.",
          "تعليمات لتكرار العناصر في القالب.",
          "أدوات لتحويل البيانات مثل pipes."
        ],
        answer: "دوال مثل ngOnInit تُنفذ في مراحل حياة المكون."
      },
      {
        question: "كيف تُستخدم ngModel؟",
        options: [
          "لإنشاء أنماط CSS ديناميكية.",
          "لربط البيانات ثنائي الاتجاه في النماذج.",
          "لإجراء طلبات HTTP في القالب.",
          "لتكرار العناصر في قائمة."
        ],
        answer: "لربط البيانات ثنائي الاتجاه في النماذج."
      },
      {
        question: "ما هي الـ Observables؟",
        options: [
          "كائنات تُمثل تدفق بيانات غير متزامن مثل الـ Promises.",
          "مكونات لإنشاء واجهات المستخدم.",
          "تعليمات لإضافة سلوك إلى العناصر.",
          "دوال لإنشاء أنماط CSS."
        ],
        answer: "كائنات تُمثل تدفق بيانات غير متزامن مثل الـ Promises."
      },
      {
        question: "ما هو ngOnInit؟",
        options: [
          "مكون لإنشاء واجهات المستخدم.",
          "دالة تُنفذ بعد إنشاء المكون لتهيئته.",
          "خدمة لإجراء طلبات HTTP.",
          "تعليمات لتكرار العناصر."
        ],
        answer: "دالة تُنفذ بعد إنشاء المكون لتهيئته."
      },
      {
        question: "كيف تُستخدم custom directives؟",
        options: [
          "لإنشاء تعليمات مخصصة تضيف سلوكًا للعناصر.",
          "لإنشاء مكونات واجهة مستخدم جديدة.",
          "لإجراء طلبات HTTP في القالب.",
          "لتحويل البيانات مثل pipes."
        ],
        answer: "لإنشاء تعليمات مخصصة تضيف سلوكًا للعناصر."
      },
      {
        question: "ما هي الـ change detection؟",
        options: [
          "آلية لتحديث الواجهة عند تغيير البيانات.",
          "خدمة لإجراء طلبات HTTP تلقائيًا.",
          "تعليمات لتكرار العناصر في القالب.",
          "دالة لإنشاء أنماط CSS ديناميكية."
        ],
        answer: "آلية لتحديث الواجهة عند تغيير البيانات."
      }
    ]
  },
  {
    title: "Vue.js",
    icon: <Blocks className="w-5 h-5 text-green-400" />,
    questions: [
      {
        question: "ما هو Vue.js؟",
        options: [
          "إطار عمل خفيف لبناء واجهات مستخدم تفاعلية.",
          "مكتبة لتحسين أداء JavaScript.",
          "لغة برمجة مستقلة.",
          "إطار عمل لتطوير تطبيقات الخادم."
        ],
        answer: "إطار عمل خفيف لبناء واجهات مستخدم تفاعلية."
      },
      {
        question: "ما هي الـ components؟",
        options: [
          "دوال لتحسين الأداء.",
          "وحدات مستقلة لتقسيم الواجهة.",
          "ملفات لتخزين البيانات.",
          "أدوات لإنشاء قواعد بيانات."
        ],
        answer: "وحدات مستقلة لتقسيم الواجهة."
      },
      {
        question: "كيف يعمل data binding؟",
        options: [
          "يُنشئ أنماط CSS تلقائيًا.",
          "يُحدث قواعد البيانات.",
          "يربط البيانات بالواجهة باستخدام v-bind.",
          "يُضيف تأثيرات بصرية."
        ],
        answer: "يربط البيانات بالواجهة باستخدام v-bind."
      },
      {
        question: "ما هي الـ directives؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "أدوات لتصميم الواجهات.",
          "وسوم HTML مخصصة.",
          "تعليمات مثل v-if وv-for للتحكم في العرض."
        ],
        answer: "تعليمات مثل v-if وv-for للتحكم في العرض."
      },
      {
        question: "ما هي Vue Router؟",
        options: [
          "مكتبة لإنشاء تطبيقات متعددة الصفحات.",
          "أداة لتحسين SEO.",
          "مكتبة لإدارة الحالة.",
          "إطار عمل لتطوير تطبيقات الخادم."
        ],
        answer: "مكتبة لإنشاء تطبيقات متعددة الصفحات."
      },
      {
        question: "كيف تُستخدم computed properties؟",
        options: [
          "لإنشاء أنماط CSS.",
          "لإنشاء قيم محسوبة تعتمد على البيانات.",
          "لتحديد حجم النصوص.",
          "لإضافة صور."
        ],
        answer: "لإنشاء قيم محسوبة تعتمد على البيانات."
      },
      {
        question: "ما هي watchers؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "دوال تتفاعل مع تغييرات البيانات.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "دوال تتفاعل مع تغييرات البيانات."
      },
      {
        question: "كيف يعمل reactivity؟",
        options: [
          "يُنشئ انتقالات بصرية.",
          "يُضيف ظلال للعناصر.",
          "يُحدث الواجهة تلقائيًا عند تغيير البيانات.",
          "يُحدد حجم النصوص."
        ],
        answer: "يُحدث الواجهة تلقائيًا عند تغيير البيانات."
      },
      {
        question: "ما هي Vue CLI؟",
        options: [
          "أداة لإنشاء وإدارة مشاريع Vue.js.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "أداة لإنشاء وإدارة مشاريع Vue.js."
      },
      {
        question: "كيف تُدمج APIs؟",
        options: [
          "باستخدام CSS فقط.",
          "باستخدام axios أو fetch لجلب البيانات.",
          "باستخدام HTML فقط.",
          "بتقليل عدد العناصر."
        ],
        answer: "باستخدام axios أو fetch لجلب البيانات."
      },
      {
        question: "ما هي Vuex؟",
        options: [
          "مكتبة لإدارة الحالة العامة في التطبيقات.",
          "أداة لتحسين SEO.",
          "مكتبة لإنشاء انتقالات.",
          "إطار عمل لتطوير تطبيقات الخادم."
        ],
        answer: "مكتبة لإدارة الحالة العامة في التطبيقات."
      },
      {
        question: "كيف يعمل Pinia؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "بديل حديث لـ Vuex لإدارة الحالة.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "بديل حديث لـ Vuex لإدارة الحالة."
      },
      {
        question: "ما هي slots؟",
        options: [
          "دوال لتحسين الأداء.",
          "وسوم HTML.",
          "تُتيح إدراج محتوى ديناميكي في المكونات.",
          "خصائص CSS."
        ],
        answer: "تُتيح إدراج محتوى ديناميكي في المكونات."
      },
      {
        question: "كيف تُنشأ component؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "بتعريف كائن باستخدام Vue.component.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "بتعريف كائن باستخدام Vue.component."
      },
      {
        question: "ما هي event handling؟",
        options: [
          "التعامل مع الأحداث باستخدام v-on.",
          "إنشاء أنماط CSS.",
          "تحديد حجم النصوص.",
          "إضافة صور."
        ],
        answer: "التعامل مع الأحداث باستخدام v-on."
      },
      {
        question: "كيف تُستخدم filters؟",
        options: [
          "لإنشاء انتقالات بصرية.",
          "لتحويل البيانات في القوالب (في Vue 2).",
          "لتحديد حجم النصوص.",
          "لإضافة ظلال."
        ],
        answer: "لتحويل البيانات في القوالب (في Vue 2)."
      },
      {
        question: "ما هي transition؟",
        options: [
          "ميزة لإنشاء رسوم متحركة عند تغيير العناصر.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "ميزة لإنشاء رسوم متحركة عند تغيير العناصر."
      },
      {
        question: "كيف تُحسن الأداء؟",
        options: [
          "بإضافة المزيد من الصور.",
          "باستخدام lazy loading وcomputed properties.",
          "بتقليل عدد الوسوم.",
          "باستخدام CSS فقط."
        ],
        answer: "باستخدام lazy loading وcomputed properties."
      },
      {
        question: "ما هي dynamic components؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "مكونات تُحدد ديناميكيًا باستخدام <component>.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "مكونات تُحدد ديناميكيًا باستخدام <component>."
      },
      {
        question: "كيف تُستخدم Vue Devtools؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "أداة لتصحيح وتتبع حالة التطبيق.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "أداة لتصحيح وتتبع حالة التطبيق."
      }
    ]
  },
  {
    title: "React Basics",
    icon: <Puzzle className="w-5 h-5 text-teal-300" />,
    questions: [
      {
        question: "ما هي الـ components في React؟",
        options: [
          "وحدات مستقلة تُشكل الواجهة.",
          "دوال لتحسين الأداء.",
          "ملفات لتخزين البيانات.",
          "أدوات لإنشاء قواعد بيانات."
        ],
        answer: "وحدات مستقلة تُشكل الواجهة."
      },
      {
        question: "كيف تُكتب JSX؟",
        options: [
          "باستخدام CSS فقط.",
          "بمزج HTML مع JavaScript داخل المكونات.",
          "بإنشاء وسوم HTML جديدة.",
          "بكتابة دوال JavaScript."
        ],
        answer: "بمزج HTML مع JavaScript داخل المكونات."
      },
      {
        question: "ما هو useState؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "Hook لإدارة الحالة في المكونات الوظيفية.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "Hook لإدارة الحالة في المكونات الوظيفية."
      },
      {
        question: "كيف تُمرر props؟",
        options: [
          "بإنشاء وسوم HTML.",
          "بإضافتها كسمات للمكون مثل <Component name='value' />.",
          "بكتابة دوال JavaScript.",
          "باستخدام CSS فقط."
        ],
        answer: "بإضافتها كسمات للمكون مثل <Component name='value' />."
      },
      {
        question: "ما هي reusable UI؟",
        options: [
          "مكونات يمكن استخدامها في أماكن متعددة.",
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "مكونات يمكن استخدامها في أماكن متعددة."
      },
      {
        question: "كيف تُعالج الأحداث؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستخدام سمات مثل onClick={handleClick}.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام سمات مثل onClick={handleClick}."
      },
      {
        question: "كيف تُعرض قائمة؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستخدام map لتكرار البيانات في JSX.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام map لتكرار البيانات في JSX."
      },
      {
        question: "ما هو Virtual DOM؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "تمثيل افتراضي للواجهة لتحسين التحديثات.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "تمثيل افتراضي للواجهة لتحسين التحديثات."
      },
      {
        question: "كيف تُنشأ مكون وظيفي؟",
        options: [
          "بكتابة دالة تُرجع JSX.",
          "بإنشاء وسم HTML جديد.",
          "باستخدام خاصية CSS.",
          "بإنشاء قاعدة بيانات."
        ],
        answer: "بكتابة دالة تُرجع JSX."
      },
      {
        question: "ما هي state؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "بيانات داخلية تتحكم في عرض المكون.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "بيانات داخلية تتحكم في عرض المكون."
      },
      {
        question: "كيف يعمل conditional rendering؟",
        options: [
          "باستخدام if أو العامل && في JSX.",
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام if أو العامل && في JSX."
      },
      {
        question: "ما هي key في القوائم؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "معرف فريد لتحسين تحديث العناصر.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "معرف فريد لتحسين تحديث العناصر."
      },
      {
        question: "كيف تُستخدم fragments؟",
        options: [
          "لتجميع عناصر بدون عقدة أب إضافية.",
          "لإنشاء أنماط CSS.",
          "لتحديد حجم النصوص.",
          "لإضافة صور."
        ],
        answer: "لتجميع عناصر بدون عقدة أب إضافية."
      },
      {
        question: "ما هي controlled components؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "مكونات نماذج تُدار حالتها بواسطة React.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "مكونات نماذج تُدار حالتها بواسطة React."
      },
      {
        question: "كيف تُنشأ uncontrolled component؟",
        options: [
          "باستخدام ref للوصول إلى قيم الإدخال.",
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام ref للوصول إلى قيم الإدخال."
      },
      {
        question: "ما هي prop drilling؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "تمرير props عبر مكونات متعددة.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "تمرير props عبر مكونات متعددة."
      },
      {
        question: "كيف تُستخدم defaultProps؟",
        options: [
          "لتعيين قيم افتراضية لـ props.",
          "لإنشاء أنماط CSS.",
          "لتحديد حجم النصوص.",
          "لإضافة صور."
        ],
        answer: "لتعيين قيم افتراضية لـ props."
      },
      {
        question: "ما هي children؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "محتوى يُمرر بين علامات المكون.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "محتوى يُمرر بين علامات المكون."
      },
      {
        question: "كيف تُحدث الحالة؟",
        options: [
          "باستخدام دالة setState أو set في useState.",
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام دالة setState أو set في useState."
      },
      {
        question: "ما هي lifecycle في المكونات؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "مراحل مثل التهيئة والتحديث والإزالة.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "مراحل مثل التهيئة والتحديث والإزالة."
      }
    ]
  },
  {
    title: "Hooks + Routing + Context",
    icon: <GitBranch className="w-5 h-5 text-indigo-400" />,
    questions: [
      {
        question: "ما هو useEffect؟",
        options: [
          "Hook للتعامل مع التأثيرات الجانبية.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "Hook للتعامل مع التأثيرات الجانبية."
      },
      {
        question: "كيف يعمل useContext؟",
        options: [
          "يُنشئ أنماط CSS.",
          "يُتيح الوصول إلى الحالة العامة.",
          "يُحدد حجم النصوص.",
          "يُضيف صور."
        ],
        answer: "يُتيح الوصول إلى الحالة العامة."
      },
      {
        question: "ما هي custom hooks؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "دوال مخصصة تُعيد منطق قابل لإعادة الاستخدام.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "دوال مخصصة تُعيد منطق قابل لإعادة الاستخدام."
      },
      {
        question: "كيف تُستخدم React Router؟",
        options: [
          "لتحسين SEO.",
          "لإنشاء تطبيقات متعددة الصفحات.",
          "لإدارة الحالة.",
          "لإنشاء انتقالات بصرية."
        ],
        answer: "لإنشاء تطبيقات متعددة الصفحات."
      },
      {
        question: "ما هي global state؟",
        options: [
          "حالة مشتركة بين مكونات التطبيق.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "حالة مشتركة بين مكونات التطبيق."
      },
      {
        question: "كيف تُحسن الأداء؟",
        options: [
          "بإضافة المزيد من الصور.",
          "باستخدام memo وuseMemo وuseCallback.",
          "بتقليل عدد الوسوم.",
          "باستخدام CSS فقط."
        ],
        answer: "باستخدام memo وuseMemo وuseCallback."
      },
      {
        question: "ما هي side effects؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "عمليات مثل جلب البيانات أو تحديث DOM.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "عمليات مثل جلب البيانات أو تحديث DOM."
      },
      {
        question: "كيف تُنشأ multi-page app؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستخدام Routes وRoute في React Router.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام Routes وRoute في React Router."
      },
      {
        question: "ما هي useReducer؟",
        options: [
          "Hook لإدارة الحالة المعقدة.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "Hook لإدارة الحالة المعقدة."
      },
      {
        question: "كيف تُستخدم useRef؟",
        options: [
          "لإنشاء أنماط CSS.",
          "للوصول إلى عناصر DOM أو تخزين قيم.",
          "لتحديد حجم النصوص.",
          "لإضافة صور."
        ],
        answer: "للوصول إلى عناصر DOM أو تخزين قيم."
      },
      {
        question: "ما هي dynamic routes؟",
        options: [
          "مسارات تحتوي على معاملات مثل /user/:id.",
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "مسارات تحتوي على معاملات مثل /user/:id."
      },
      {
        question: "كيف تُنشأ context؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستخدام createContext وProvider.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام createContext وProvider."
      },
      {
        question: "ما هي nested routes؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "مسارات داخل مسارات في React Router.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "مسارات داخل مسارات في React Router."
      },
      {
        question: "كيف تُعالج navigation؟",
        options: [
          "باستخدام useNavigate أو Link.",
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام useNavigate أو Link."
      },
      {
        question: "ما هي useMemo؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "يحفظ قيمة محسوبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "يحفظ قيمة محسوبة لتحسين الأداء."
      },
      {
        question: "كيف يعمل useCallback؟",
        options: [
          "يُنشئ أنماط CSS.",
          "يحفظ دالة لتجنب إعادة إنشائها.",
          "يُحدد حجم النصوص.",
          "يُضيف صور."
        ],
        answer: "يحفظ دالة لتجنب إعادة إنشائها."
      },
      {
        question: "ما هي cleanup في useEffect؟",
        options: [
          "دالة تُنفذ لتنظيف التأثيرات.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "دالة تُنفذ لتنظيف التأثيرات."
      },
      {
        question: "كيف تُدمج APIs؟",
        options: [
          "باستخدام CSS فقط.",
          "باستخدام fetch داخل useEffect.",
          "باستخدام HTML فقط.",
          "بتقليل عدد العناصر."
        ],
        answer: "باستخدام fetch داخل useEffect."
      },
      {
        question: "ما هي route guards؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "منطق للتحكم في الوصول إلى المسارات.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "منطق للتحكم في الوصول إلى المسارات."
      },
      {
        question: "كيف تُستخدم useLocation؟",
        options: [
          "لإنشاء أنماط CSS.",
          "للوصول إلى معلومات المسار الحالي.",
          "لتحديد حجم النصوص.",
          "لإضافة صور."
        ],
        answer: "للوصول إلى معلومات المسار الحالي."
      }
    ]
  },
  {
    title: "TypeScript Basics",
    icon: <Type className="w-5 h-5 text-blue-400" />,
    questions: [
      {
        question: "ما هو TypeScript؟",
        options: [
          "لغة تضيف أنواعًا ثابتة إلى JavaScript.",
          "مكتبة لتحسين أداء JavaScript.",
          "لغة برمجة مستقلة.",
          "إطار عمل لتطوير تطبيقات الخادم."
        ],
        answer: "لغة تضيف أنواعًا ثابتة إلى JavaScript."
      },
      {
        question: "ما هي types؟",
        options: [
          "دوال لتحسين الأداء.",
          "أنواع بيانات مثل string أو number.",
          "ملفات لتخزين البيانات.",
          "أدوات لإنشاء قواعد بيانات."
        ],
        answer: "أنواع بيانات مثل string أو number."
      },
      {
        question: "كيف تُستخدم interfaces؟",
        options: [
          "لإنشاء أنماط CSS.",
          "لتعريف هيكلية الكائنات.",
          "لتحديد حجم النصوص.",
          "لإضافة صور."
        ],
        answer: "لتعريف هيكلية الكائنات."
      },
      {
        question: "ما هي type annotations؟",
        options: [
          "إنشاء انتقالات بصرية.",
          "تحديد نوع المتغير مثل let name: string.",
          "تحديد حجم النصوص.",
          "إضافة ظلال."
        ],
        answer: "تحديد نوع المتغير مثل let name: string."
      },
      {
        question: "كيف يعمل union types؟",
        options: [
          "يسمح بأكثر من نوع مثل string | number.",
          "يُنشئ أنماط CSS تلقائيًا.",
          "يُحدث قواعد البيانات.",
          "يُضيف تأثيرات بصرية."
        ],
        answer: "يسمح بأكثر من نوع مثل string | number."
      },
      {
        question: "ما هي generics؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "أنواع ديناميكية لإنشاء مكونات مرنة.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "أنواع ديناميكية لإنشاء مكونات مرنة."
      },
      {
        question: "كيف يعمل type inference؟",
        options: [
          "يُنشئ انتقالات بصرية.",
          "يحدد الأنواع تلقائيًا بدون تعريف.",
          "يُضيف ظلال للعناصر.",
          "يُحدد حجم النصوص."
        ],
        answer: "يحدد الأنواع تلقائيًا بدون تعريف."
      },
      {
        question: "ما هي tsconfig.json؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "ملف لتكوين إعدادات TypeScript.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "ملف لتكوين إعدادات TypeScript."
      },
      {
        question: "كيف تُعالج الأخطاء؟",
        options: [
          "بإضافة المزيد من الصور.",
          "باستخدام أدوات مثل VS Code وtsc.",
          "بتقليل عدد الوسوم.",
          "باستخدام CSS فقط."
        ],
        answer: "باستخدام أدوات مثل VS Code وtsc."
      },
      {
        question: "ما هي enums؟",
        options: [
          "مجموعة قيم ثابتة مثل enum Color {Red, Blue}.",
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "مجموعة قيم ثابتة مثل enum Color {Red, Blue}."
      },
      {
        question: "كيف تُستخدم type assertion؟",
        options: [
          "لإنشاء أنماط CSS.",
          "بتحديد النوع يدويًا باستخدام as.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتحديد النوع يدويًا باستخدام as."
      },
      {
        question: "ما هي never type؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "نوع للدوال التي لا تُرجع قيمة أبدًا.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "نوع للدوال التي لا تُرجع قيمة أبدًا."
      },
      {
        question: "كيف تُستخدم unknown؟",
        options: [
          "لإنشاء انتقالات بصرية.",
          "نوع أكثر أمانًا من any للقيم غير المعروفة.",
          "لتحديد حجم النصوص.",
          "لإضافة ظلال."
        ],
        answer: "نوع أكثر أمانًا من any للقيم غير المعروفة."
      },
      {
        question: "ما هي type guards؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "تحقق من الأنواع باستخدام typeof أو instanceof.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "تحقق من الأنواع باستخدام typeof أو instanceof."
      },
      {
        question: "كيف تُنشأ type alias؟",
        options: [
          "بتعريف نوع جديد باستخدام type.",
          "بإنشاء وسم HTML جديد.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "بتعريف نوع جديد باستخدام type."
      },
      {
        question: "ما هي declaration files؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "ملفات .d.ts لتعريف أنواع المكتبات.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "ملفات .d.ts لتعريف أنواع المكتبات."
      },
      {
        question: "كيف تُستخدم modules؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستخدام import وexport لتنظيم الكود.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام import وexport لتنظيم الكود."
      },
      {
        question: "ما هي intersection types؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "دمج أنواع متعددة باستخدام &.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "دمج أنواع متعددة باستخدام &."
      },
      {
        question: "كيف تُستخدم any؟",
        options: [
          "لإنشاء انتقالات بصرية.",
          "للسماح بأي نوع، لكن يُفضل تجنبه.",
          "لتحديد حجم النصوص.",
          "لإضافة ظلال."
        ],
        answer: "للسماح بأي نوع، لكن يُفضل تجنبه."
      },
      {
        question: "ما هي mapped types؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "إنشاء أنواع جديدة من أنواع موجودة.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "إنشاء أنواع جديدة من أنواع موجودة."
      }
    ]
  },
  {
    title: "TypeScript with Frameworks",
    icon: <Blocks className="w-5 h-5 text-cyan-300" />,
    questions: [
      {
        question: "كيف تُستخدم TypeScript مع React؟",
        options: [
          "بتعريف أنواع props وstate.",
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتعريف أنواع props وstate."
      },
      {
        question: "ما هي typing hooks؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "تحديد أنواع لـ useState وuseEffect.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "تحديد أنواع لـ useState وuseEffect."
      },
      {
        question: "كيف تُعرف prop types؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "باستخدام interface أو type لـ props.",
          "بإضافة صور."
        ],
        answer: "باستخدام interface أو type لـ props."
      },
      {
        question: "كيف تُعالج event types؟",
        options: [
          "بإنشاء انتقالات بصرية.",
          "لتحديد حجم النصوص.",
          "لإضافة ظلال.",
          "باستخدام أنواع مثل React.MouseEvent."
        ],
        answer: "باستخدام أنواع مثل React.MouseEvent."
      },
      {
        question: "كيف تُدمج مع Redux؟",
        options: [
          "بتعريف أنواع لـ actions وstate.",
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتعريف أنواع لـ actions وstate."
      },
      {
        question: "ما هي type safety؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "ضمان عدم وجود أخطاء أنواع أثناء التطوير.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "ضمان عدم وجود أخطاء أنواع أثناء التطوير."
      },
      {
        question: "كيف تُستخدم مع Angular؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بتعريف أنواع لـ services وcomponents.",
          "بإضافة صور."
        ],
        answer: "بتعريف أنواع لـ services وcomponents."
      },
      {
        question: "كيف تُدمج APIs؟",
        options: [
          "باستخدام CSS فقط.",
          "بتعريف أنواع للردود باستخدام interfaces.",
          "باستخدام HTML فقط.",
          "بتقليل عدد العناصر."
        ],
        answer: "بتعريف أنواع للردود باستخدام interfaces."
      },
      {
        question: "كيف تُستخدم مع Vue.js؟",
        options: [
          "بتعريف أنواع لـ props وdata.",
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتعريف أنواع لـ props وdata."
      },
      {
        question: "ما هي generic components؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "مكونات تستخدم generics لتحديد الأنواع.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "مكونات تستخدم generics لتحديد الأنواع."
      },
      {
        question: "كيف تُعرف state types؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستخدام interface لتحديد هيكلية الحالة.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام interface لتحديد هيكلية الحالة."
      },
      {
        question: "ما هي discriminated unions؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "أنواع تستخدم خاصية مشتركة للتفريق.",
          "خصائص CSS."
        ],
        answer: "أنواع تستخدم خاصية مشتركة للتفريق."
      },
      {
        question: "كيف تُحسن الأداء؟",
        options: [
          "بتقليل استخدام any وتحسين type inference.",
          "بإضافة المزيد من الصور.",
          "بتقليل عدد الوسوم.",
          "باستخدام CSS فقط."
        ],
        answer: "بتقليل استخدام any وتحسين type inference."
      },
      {
        question: "كيف تُستخدم مع NgRx؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بتعريف أنواع لـ actions وselectors.",
          "بإضافة صور."
        ],
        answer: "بتعريف أنواع لـ actions وselectors."
      },
      {
        question: "ما هي conditional types؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "أنواع تعتمد على شروط مثل T extends U.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "أنواع تعتمد على شروط مثل T extends U."
      },
      {
        question: "كيف تُعالج errors؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "باستخدام try/catch مع أنواع الأخطاء.",
          "بإضافة صور."
        ],
        answer: "باستخدام try/catch مع أنواع الأخطاء."
      },
      {
        question: "كيف تُستخدم utility types؟",
        options: [
          "مثل Partial وPick لتعديل الأنواع.",
          "لإنشاء انتقالات بصرية.",
          "لتحديد حجم النصوص.",
          "لإضافة ظلال."
        ],
        answer: "مثل Partial وPick لتعديل الأنواع."
      },
      {
        question: "ما هي module augmentation؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "تعديل أنواع المكتبات الخارجية.",
          "وسم HTML."
        ],
        answer: "تعديل أنواع المكتبات الخارجية."
      },
      {
        question: "كيف تُدمج مع Pinia؟",
        options: [
          "بتعريف أنواع لـ store وactions.",
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتعريف أنواع لـ store وactions."
      },
      {
        question: "كيف تُستخدم event handlers؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتعريف أنواع الأحداث مثل ChangeEvent.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتعريف أنواع الأحداث مثل ChangeEvent."
      }
    ]
  },
  {
    title: "State Management Tools",
    icon: <Workflow className="w-5 h-5 text-purple-300" />,
    questions: [
      {
        question: "ما هو Redux Toolkit؟",
        options: [
          "مكتبة لتبسيط إدارة الحالة في React.",
          "مكتبة لتحسين أداء JavaScript.",
          "إطار عمل لتطوير تطبيقات الخادم.",
          "أداة لإنشاء انتقالات بصرية."
        ],
        answer: "مكتبة لتبسيط إدارة الحالة في React."
      },
      {
        question: "كيف يعمل Zustand؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "مكتبة خفيفة لإدارة الحالة في React.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "مكتبة خفيفة لإدارة الحالة في React."
      },
      {
        question: "ما هي NgRx؟",
        options: [
          "مكتبة لتحسين SEO.",
          "إطار عمل لتطوير تطبيقات الخادم.",
          "مكتبة لإدارة الحالة في Angular بنمط Redux.",
          "أداة لإنشاء انتقالات."
        ],
        answer: "مكتبة لإدارة الحالة في Angular بنمط Redux."
      },
      {
        question: "كيف يعمل Pinia؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML.",
          "مكتبة لإدارة الحالة في Vue.js."
        ],
        answer: "مكتبة لإدارة الحالة في Vue.js."
      },
      {
        question: "ما هي global state؟",
        options: [
          "حالة مشتركة بين مكونات التطبيق.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "حالة مشتركة بين مكونات التطبيق."
      },
      {
        question: "كيف تُعالج async actions؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستخدام middleware مثل redux-thunk.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام middleware مثل redux-thunk."
      },
      {
        question: "كيف تُدمج مع React؟",
        options: [
          "باستخدام CSS فقط.",
          "باستخدام HTML فقط.",
          "باستخدام react-redux وProvider.",
          "بتقليل عدد العناصر."
        ],
        answer: "باستخدام react-redux وProvider."
      },
      {
        question: "ما هي actions؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "كائنات تصف التغييرات في الحالة.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "كائنات تصف التغييرات في الحالة."
      },
      {
        question: "كيف يعمل reducer؟",
        options: [
          "يُنشئ انتقالات بصرية.",
          "يُضيف ظلال للعناصر.",
          "يحدد كيفية تحديث الحالة بناءً على actions.",
          "يُحدد حجم النصوص."
        ],
        answer: "يحدد كيفية تحديث الحالة بناءً على actions."
      },
      {
        question: "ما هي store؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "مخزن مركزي للحالة العامة.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "مخزن مركزي للحالة العامة."
      },
      {
        question: "كيف تُستخدم selectors؟",
        options: [
          "بإنشاء أنماط CSS.",
          "لاستخراج البيانات من الـ store.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "لاستخراج البيانات من الـ store."
      },
      {
        question: "ما هي createSlice؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "دالة في Redux Toolkit تُنشئ reducer وactions.",
          "وسم HTML."
        ],
        answer: "دالة في Redux Toolkit تُنشئ reducer وactions."
      },
      {
        question: "كيف تُدمج مع Angular؟",
        options: [
          "باستخدام NgRx/store وeffects.",
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام NgRx/store وeffects."
      },
      {
        question: "كيف تُستخدم Pinia مع Vue؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتعريف store باستخدام defineStore.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتعريف store باستخدام defineStore."
      },
      {
        question: "ما هي devTools؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "أدوات لتتبع الحالة والإجراءات.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "أدوات لتتبع الحالة والإجراءات."
      },
      {
        question: "كيف تُحسن الأداء؟",
        options: [
          "بإضافة المزيد من الصور.",
          "باستخدام memoized selectors.",
          "بتقليل عدد الوسوم.",
          "باستخدام CSS فقط."
        ],
        answer: "باستخدام memoized selectors."
      },
      {
        question: "ما هي effects في NgRx؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "لتعامل مع التأثيرات الجانبية.",
          "خصائص CSS."
        ],
        answer: "لتعامل مع التأثيرات الجانبية."
      },
      {
        question: "كيف تُنشأ action؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "باستخدام خاصية CSS.",
          "بتعريف نوع وعبء في Redux أو NgRx.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "بتعريف نوع وعبء في Redux أو NgRx."
      },
      {
        question: "ما هي middleware؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وظائف تُنفذ بين dispatch وreducer.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "وظائف تُنفذ بين dispatch وreducer."
      },
      {
        question: "كيف تُدمج مع Vuex؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "باستخدام Vuex store في Vue 2.",
          "بإضافة صور."
        ],
        answer: "باستخدام Vuex store في Vue 2."
      }
    ]
  },
  {
    title: "Unit Testing",
    icon: <TestTube className="w-5 h-5 text-red-300" />,
    questions: [
      {
        question: "ما هو unit testing؟",
        options: [
          "اختبار وحدات صغيرة من الكود بشكل مستقل.",
          "اختبار التطبيق بالكامل.",
          "إنشاء أنماط CSS.",
          "إضافة صور."
        ],
        answer: "اختبار وحدات صغيرة من الكود بشكل مستقل."
      },
      {
        question: "ما هي Jest؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "إطار عمل لكتابة اختبارات JavaScript.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "إطار عمل لكتابة اختبارات JavaScript."
      },
      {
        question: "كيف تُختبر مكونات React؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستخدام @testing-library/react.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام @testing-library/react."
      },
      {
        question: "كيف تُختبر Angular؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "باستخدام TestBed وJasmine."
        ],
        answer: "باستخدام TestBed وJasmine."
      },
      {
        question: "كيف تُختبر Vue.js؟",
        options: [
          "باستخدام @vue/test-utils.",
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام @vue/test-utils."
      },
      {
        question: "ما هي mocks؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "كائنات مزيفة تُحاكي سلوك الوحدات.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "كائنات مزيفة تُحاكي سلوك الوحدات."
      },
      {
        question: "كيف تُنشأ mock؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "باستخدام jest.fn() أو spies.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "باستخدام jest.fn() أو spies."
      },
      {
        question: "ما هي test coverage؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "نسبة الكود المختبَر في الاختبارات.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "نسبة الكود المختبَر في الاختبارات."
      },
      {
        question: "كيف تُعالج edge cases؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بكتابة اختبارات للحالات الحدية.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بكتابة اختبارات للحالات الحدية."
      },
      {
        question: "ما هي snapshot testing؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "مقارنة مخرجات المكونات مع لقطة.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "مقارنة مخرجات المكونات مع لقطة."
      },
      {
        question: "كيف تُدمج مع CI/CD؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بإعداد اختبارات في GitHub Actions.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بإعداد اختبارات في GitHub Actions."
      },
      {
        question: "ما هي spies؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "دوال تتتبع استدعاءات الدوال.",
          "خصائص CSS."
        ],
        answer: "دوال تتتبع استدعاءات الدوال."
      },
      {
        question: "كيف تُختبر async functions؟",
        options: [
          "باستخدام async/await أو .resolves.",
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام async/await أو .resolves."
      },
      {
        question: "ما هي testing libraries؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "مكتبات مثل React Testing Library لتسهيل الاختبار.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "مكتبات مثل React Testing Library لتسهيل الاختبار."
      },
      {
        question: "كيف تُختبر APIs؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بمحاكاة الطلبات باستخدام msw.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بمحاكاة الطلبات باستخدام msw."
      },
      {
        question: "ما هي describe؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "تُستخدم لتجميع الاختبارات ذات الصلة.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "تُستخدم لتجميع الاختبارات ذات الصلة."
      },
      {
        question: "كيف تُستخدم beforeEach؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "لإعداد بيئة الاختبار قبل كل اختبار.",
          "بإضافة صور."
        ],
        answer: "لإعداد بيئة الاختبار قبل كل اختبار."
      },
      {
        question: "ما هي test-driven development؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "كتابة الاختبارات قبل الكود.",
          "وسم HTML."
        ],
        answer: "كتابة الاختبارات قبل الكود."
      },
      {
        question: "كيف تُختبر forms؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بمحاكاة إدخال المستخدم والتحقق.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بمحاكاة إدخال المستخدم والتحقق."
      },
      {
        question: "ما هي assertions؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "تأكيدات مثل expect() للتحقق من النتائج.",
          "خصائص CSS."
        ],
        answer: "تأكيدات مثل expect() للتحقق من النتائج."
      }
    ]
  },
  {
    title: "CI/CD + Hosting",
    icon: <Rocket className="w-5 h-5 text-green-300" />,
    questions: [
      {
        question: "ما هو CI/CD؟",
        options: [
          "عمليات أتمتة للاختبار والنشر.",
          "مكتبة لتحسين أداء JavaScript.",
          "إطار عمل لتطوير تطبيقات الخادم.",
          "أداة لإنشاء انتقالات بصرية."
        ],
        answer: "عمليات أتمتة للاختبار والنشر."
      },
      {
        question: "كيف يعمل GitHub Actions؟",
        options: [
          "يُنشئ أنماط CSS.",
          "يُنشئ خطوط أنباء للاختبار والنشر.",
          "يُحدد حجم النصوص.",
          "يُضيف صور."
        ],
        answer: "يُنشئ خطوط أنباء للاختبار والنشر."
      },
      {
        question: "كيف تُنشر على Vercel؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بربط المستودع وتكوين الإعدادات.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بربط المستودع وتكوين الإعدادات."
      },
      {
        question: "كيف تُنشر على Netlify؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "بربط المستودع وتحديد أمر البناء."
        ],
        answer: "بربط المستودع وتحديد أمر البناء."
      },
      {
        question: "ما هي CI/CD pipeline؟",
        options: [
          "سلسلة خطوات للاختبار والنشر.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "سلسلة خطوات للاختبار والنشر."
      },
      {
        question: "كيف تُحسن build times؟",
        options: [
          "بإضافة المزيد من الصور.",
          "بتقليل الموارد وتحسين الأوامر.",
          "بتقليل عدد الوسوم.",
          "باستخدام CSS فقط."
        ],
        answer: "بتقليل الموارد وتحسين الأوامر."
      },
      {
        question: "ما هي environment variables؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "متغيرات تُستخدم لتأمين الإعدادات.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "متغيرات تُستخدم لتأمين الإعدادات."
      },
      {
        question: "كيف تُراقب الأداء؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستخدام أدوات مثل Vercel Analytics.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام أدوات مثل Vercel Analytics."
      },
      {
        question: "ما هي automated testing؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "تشغيل الاختبارات تلقائيًا في CI.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "تشغيل الاختبارات تلقائيًا في CI."
      },
      {
        question: "كيف تُستخدم workflows؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتعريف ملفات YAML في .github/workflows.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتعريف ملفات YAML في .github/workflows."
      },
      {
        question: "ما هي deployment rollback؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "الرجوع إلى إصدار سابق عند الفشل.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "الرجوع إلى إصدار سابق عند الفشل."
      },
      {
        question: "كيف تُعالج الأخطاء؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بمراقبة السجلات وإعداد التنبيهات.",
          "بإضافة صور."
        ],
        answer: "بمراقبة السجلات وإعداد التنبيهات."
      },
      {
        question: "ما هي blue-green deployment؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "نشر إصدار جديد مع الاحتفاظ بالقديم.",
          "خصائص CSS."
        ],
        answer: "نشر إصدار جديد مع الاحتفاظ بالقديم."
      },
      {
        question: "كيف تُدمج Docker؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بإنشاء صور للتطبيق ونشرها.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بإنشاء صور للتطبيق ونشرها."
      },
      {
        question: "ما هي caching؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "تخزين الموارد لتسريع البناء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "تخزين الموارد لتسريع البناء."
      },
      {
        question: "كيف تُستخدم secrets؟",
        options: [
          "بإنشاء أنماط CSS.",
          "لتخزين بيانات حساسة في GitHub.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "لتخزين بيانات حساسة في GitHub."
      },
      {
        question: "ما هي preview deployments؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "نشر مؤقت لمعاينة التغييرات.",
          "خصائص CSS."
        ],
        answer: "نشر مؤقت لمعاينة التغييرات."
      },
      {
        question: "كيف تُحسن SEO؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "باستخدام SSG وmeta tags.",
          "بإضافة صور."
        ],
        answer: "باستخدام SSG وmeta tags."
      },
      {
        question: "ما هي serverless؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "نشر التطبيقات بدون إدارة خوادم.",
          "وسم HTML."
        ],
        answer: "نشر التطبيقات بدون إدارة خوادم."
      },
      {
        question: "كيف تُستخدم CDN؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "لتوزيع المحتوى بسرعة عبر العالم.",
          "بإضافة صور."
        ],
        answer: "لتوزيع المحتوى بسرعة عبر العالم."
      }
    ]
  },
  {
    title: "Material-UI",
    icon: <Box className="w-5 h-5 text-teal-300" />,
    questions: [
      {
        question: "ما هي Material-UI؟",
        options: [
          "مكتبة مكونات React تتبع Material Design.",
          "مكتبة لتحسين أداء JavaScript.",
          "إطار عمل لتطوير تطبيقات الخادم.",
          "أداة لإنشاء انتقالات بصرية."
        ],
        answer: "مكتبة مكونات React تتبع Material Design."
      },
      {
        question: "كيف تُستخدم المكونات؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستيرادها مثل Button من @mui/material.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستيرادها مثل Button من @mui/material."
      },
      {
        question: "ما هي theming؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "تخصيص الأنماط باستخدام ThemeProvider.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "تخصيص الأنماط باستخدام ThemeProvider."
      },
      {
        question: "كيف تُنشأ responsive design؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "باستخدام Grid وbreakpoints."
        ],
        answer: "باستخدام Grid وbreakpoints."
      },
      {
        question: "ما هي accessibility؟",
        options: [
          "ضمان توافق المكونات مع معايير WCAG.",
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "ضمان توافق المكونات مع معايير WCAG."
      },
      {
        question: "كيف تُدمج مع React؟",
        options: [
          "باستخدام CSS فقط.",
          "بتثبيت @mui/material واستيراد المكونات.",
          "باستخدام HTML فقط.",
          "بتقليل عدد العناصر."
        ],
        answer: "بتثبيت @mui/material واستيراد المكونات."
      },
      {
        question: "ما هي styled API؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "تخصيص المكونات باستخدام styled().",
          "وسم HTML."
        ],
        answer: "تخصيص المكونات باستخدام styled()."
      },
      {
        question: "كيف تُحسن الأداء؟",
        options: [
          "بإضافة المزيد من الصور.",
          "باستخدام lazy loading للمكونات.",
          "بتقليل عدد الوسوم.",
          "باستخدام CSS فقط."
        ],
        answer: "باستخدام lazy loading للمكونات."
      },
      {
        question: "ما هي sx prop؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية لتطبيق أنماط مباشرة على المكونات.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "خاصية لتطبيق أنماط مباشرة على المكونات."
      },
      {
        question: "كيف تُنشأ custom theme؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "بتعريف كائن theme وتمريره إلى ThemeProvider.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "بتعريف كائن theme وتمريره إلى ThemeProvider."
      },
      {
        question: "ما هي Grid؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "نظام تخطيط متجاوب لتنظيم المكونات.",
          "وسم HTML."
        ],
        answer: "نظام تخطيط متجاوب لتنظيم المكونات."
      },
      {
        question: "كيف تُستخدم icons؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "باستيرادها من @mui/icons-material.",
          "بإضافة صور."
        ],
        answer: "باستيرادها من @mui/icons-material."
      },
      {
        question: "ما هي typography؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "مكون لتنسيق النصوص بشكل متسق.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "مكون لتنسيق النصوص بشكل متسق."
      },
      {
        question: "كيف تُنشأ form؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "باستخدام TextField وFormControl.",
          "بإضافة صور."
        ],
        answer: "باستخدام TextField وFormControl."
      },
      {
        question: "ما هي AppBar؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "مكون لإنشاء شريط التنقل العلوي.",
          "وسم HTML."
        ],
        answer: "مكون لإنشاء شريط التنقل العلوي."
      },
      {
        question: "كيف تُعالج الأحداث؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "باستخدام props مثل onClick في المكونات.",
          "بإضافة صور."
        ],
        answer: "باستخدام props مثل onClick في المكونات."
      },
      {
        question: "ما هي Drawer؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "مكون لإنشاء قائمة جانبية قابلة للسحب.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "مكون لإنشاء قائمة جانبية قابلة للسحب."
      },
      {
        question: "كيف تُستخدم transitions؟",
        options: [
          "بإنشاء المزيد من الصور.",
          "بتقليل عدد الوسوم.",
          "باستخدام Collapse أو Fade.",
          "باستخدام CSS فقط."
        ],
        answer: "باستخدام Collapse أو Fade."
      },
      {
        question: "ما هي Stack؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "مكون لتجميع العناصر بشكل متتالي.",
          "وسم HTML."
        ],
        answer: "مكون لتجميع العناصر بشكل متتالي."
      },
      {
        question: "كيف تُنشأ modal؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "باستخدام Modal أو Dialog.",
          "بإضافة صور."
        ],
        answer: "باستخدام Modal أو Dialog."
      }
    ]
  },
  {
    title: "Framer Motion",
    icon: <Palette className="w-5 h-5 text-purple-400" />,
    questions: [
      {
        question: "ما هي Framer Motion؟",
        options: [
          "مكتبة لإنشاء رسوم متحركة في React.",
          "مكتبة لتحسين أداء JavaScript.",
          "إطار عمل لتطوير تطبيقات الخادم.",
          "أداة لإنشاء قواعد بيانات."
        ],
        answer: "مكتبة لإنشاء رسوم متحركة في React."
      },
      {
        question: "كيف تُستخدم motion components؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستيراد motion.div وإضافة props.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستيراد motion.div وإضافة props."
      },
      {
        question: "ما هي transitions؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خصائص تحدد سلوك الرسوم المتحركة.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "خصائص تحدد سلوك الرسوم المتحركة."
      },
      {
        question: "كيف تُنشأ animation؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript.",
          "بتحديد animate وinitial في motion component."
        ],
        answer: "بتحديد animate وinitial في motion component."
      },
      {
        question: "ما هي gesture animations؟",
        options: [
          "رسوم متحركة تستجيب لإيماءات مثل السحب.",
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "رسوم متحركة تستجيب لإيماءات مثل السحب."
      },
      {
        question: "كيف تُنشأ complex sequence؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستخدام useAnimationControls.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام useAnimationControls."
      },
      {
        question: "كيف تُحسن الأداء؟",
        options: [
          "بإضافة المزيد من الصور.",
          "بتقليل التحديثات غير الضرورية.",
          "بتقليل عدد الوسوم.",
          "باستخدام CSS فقط."
        ],
        answer: "بتقليل التحديثات غير الضرورية."
      },
      {
        question: "كيف تُدمج مع React؟",
        options: [
          "باستخدام CSS فقط.",
          "بتثبيت framer-motion واستيراد motion.",
          "باستخدام HTML فقط.",
          "بتقليل عدد العناصر."
        ],
        answer: "بتثبيت framer-motion واستيراد motion."
      },
      {
        question: "ما هي variants؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "مجموعات من الحالات لتسهيل التحريك.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "مجموعات من الحالات لتسهيل التحريك."
      },
      {
        question: "كيف تُستخدم whileHover؟",
        options: [
          "بإنشاء أنماط CSS.",
          "لتطبيق رسوم متحركة عند التمرير.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "لتطبيق رسوم متحركة عند التمرير."
      },
      {
        question: "ما هي whileTap؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "رسوم متحركة عند النقر على العنصر.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "رسوم متحركة عند النقر على العنصر."
      },
      {
        question: "كيف تُستخدم drag؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتفعيل خاصية drag في motion component.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتفعيل خاصية drag في motion component."
      },
      {
        question: "ما هي useMotionValue؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "Hook لتتبع قيم التحريك ديناميكيًا.",
          "وسم HTML."
        ],
        answer: "Hook لتتبع قيم التحريك ديناميكيًا."
      },
      {
        question: "كيف تُنشأ transition؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "بتحديد type وduration في transition.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "بتحديد type وduration في transition."
      },
      {
        question: "ما هي exit animations؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "رسوم متحركة عند إزالة المكون.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "رسوم متحركة عند إزالة المكون."
      },
      {
        question: "كيف تُستخدم AnimatePresence؟",
        options: [
          "بإنشاء أنماط CSS.",
          "لإدارة رسوم إزالة المكونات.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "لإدارة رسوم إزالة المكونات."
      },
      {
        question: "ما هي layout animations؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "تحريك التغييرات في التخطيط تلقائيًا.",
          "خصائص CSS."
        ],
        answer: "تحريك التغييرات في التخطيط تلقائيًا."
      },
      {
        question: "كيف تُنشأ stagger effect؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد تأخير للعناصر في variants.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتحديد تأخير للعناصر في variants."
      },
      {
        question: "كيف تُعالج الأحداث؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "باستخدام onAnimationComplete.",
          "بإضافة صور."
        ],
        answer: "باستخدام onAnimationComplete."
      },
      {
        question: "ما هي keyframes؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "تحديد مراحل متعددة للرسوم المتحركة.",
          "خصائص CSS."
        ],
        answer: "تحديد مراحل متعددة للرسوم المتحركة."
      }
    ]
  },
  {
    title: "Formik",
    icon: <FormInput className="w-5 h-5 text-blue-400" />,
    questions: [
      {
        question: "ما هي Formik؟",
        options: [
          "مكتبة لإدارة النماذج في React.",
          "مكتبة لتحسين أداء JavaScript.",
          "إطار عمل لتطوير تطبيقات الخادم.",
          "أداة لإنشاء انتقالات بصرية."
        ],
        answer: "مكتبة لإدارة النماذج في React."
      },
      {
        question: "كيف تُنشأ form؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "باستخدام <Formik> وinitialValues.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "باستخدام <Formik> وinitialValues."
      },
      {
        question: "ما هي form validation؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "التحقق من الإدخال باستخدام validationSchema.",
          "وسم HTML."
        ],
        answer: "التحقق من الإدخال باستخدام validationSchema."
      },
      {
        question: "كيف تُدمج Yup؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "بتعريف مخطط Yup في validationSchema."
        ],
        answer: "بتعريف مخطط Yup في validationSchema."
      },
      {
        question: "ما هي form state؟",
        options: [
          "حالة الإدخال مثل values وerrors.",
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "حالة الإدخال مثل values وerrors."
      },
      {
        question: "كيف تُعالج form submission؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستخدام onSubmit في Formik.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام onSubmit في Formik."
      },
      {
        question: "ما هي useFormik؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "Hook لإدارة النماذج برمجيًا.",
          "وسم HTML."
        ],
        answer: "Hook لإدارة النماذج برمجيًا."
      },
      {
        question: "كيف تُحسن الأداء؟",
        options: [
          "بإضافة المزيد من الصور.",
          "بتقليل عدد الوسوم.",
          "بتقليل التحديثات باستخدام enableReinitialize.",
          "باستخدام CSS فقط."
        ],
        answer: "بتقليل التحديثات باستخدام enableReinitialize."
      },
      {
        question: "ما هي Field؟",
        options: [
          "مكون لإنشاء حقول إدخال مرتبطة.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "مكون لإنشاء حقول إدخال مرتبطة."
      },
      {
        question: "كيف تُستخدم ErrorMessage؟",
        options: [
          "بإنشاء أنماط CSS.",
          "لعرض رسائل الخطأ للحقول.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "لعرض رسائل الخطأ للحقول."
      },
      {
        question: "ما هي touched؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "حالة تُشير إلى تفاعل المستخدم مع الحقل.",
          "خصائص CSS."
        ],
        answer: "حالة تُشير إلى تفاعل المستخدم مع الحقل."
      },
      {
        question: "كيف تُنشأ custom validation؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript.",
          "بكتابة دالة validate في Formik."
        ],
        answer: "بكتابة دالة validate في Formik."
      },
      {
        question: "ما هي Form؟",
        options: [
          "مكون يُغلف النموذج بدلاً من <form>.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "مكون يُغلف النموذج بدلاً من <form>."
      },
      {
        question: "كيف تُدمج مع React؟",
        options: [
          "باستخدام CSS فقط.",
          "باستخدام HTML فقط.",
          "بتثبيت formik واستيراد مكوناته.",
          "بتقليل عدد العناصر."
        ],
        answer: "بتثبيت formik واستيراد مكوناته."
      },
      {
        question: "ما هي handleChange؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "دالة تُحدث قيم الحقول تلقائيًا.",
          "بإضافة صور."
        ],
        answer: "دالة تُحدث قيم الحقول تلقائيًا."
      },
      {
        question: "كيف تُعالج errors؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "باستخدام errors وtouched في المكونات."
        ],
        answer: "باستخدام errors وtouched في المكونات."
      },
      {
        question: "ما هي handleSubmit؟",
        options: [
          "دالة تُنفذ عند إرسال النموذج.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "دالة تُنفذ عند إرسال النموذج."
      },
      {
        question: "كيف تُنشأ dependent fields؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديث الحقول بناءً على قيم أخرى.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتحديث الحقول بناءً على قيم أخرى."
      },
      {
        question: "ما هي resetForm؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "دالة لإعادة تعيين النموذج.",
          "وسم HTML."
        ],
        answer: "دالة لإعادة تعيين النموذج."
      },
      {
        question: "كيف تُستخدم setFieldValue؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "لتحديث قيمة حقل برمجيًا."
        ],
        answer: "لتحديث قيمة حقل برمجيًا."
      }
    ]
  },
  {
    title: "Chakra UI",
    icon: <Box className="w-5 h-5 text-blue-300" />,
    questions: [
      {
        question: "ما هي Chakra UI؟",
        options: [
          "مكتبة مكونات React تركز على البساطة.",
          "مكتبة لتحسين أداء JavaScript.",
          "إطار عمل لتطوير تطبيقات الخادم.",
          "أداة لإنشاء انتقالات بصرية."
        ],
        answer: "مكتبة مكونات React تركز على البساطة."
      },
      {
        question: "كيف تُستخدم المكونات؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستيرادها مثل Button من @chakra-ui/react.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستيرادها مثل Button من @chakra-ui/react."
      },
      {
        question: "ما هي theming؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "تخصيص الأنماط باستخدام extendTheme.",
          "وسم HTML."
        ],
        answer: "تخصيص الأنماط باستخدام extendTheme."
      },
      {
        question: "كيف تُنشأ responsive design؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "باستخدام useBreakpointValue وGrid."
        ],
        answer: "باستخدام useBreakpointValue وGrid."
      },
      {
        question: "ما هي accessibility؟",
        options: [
          "ضمان توافق المكونات مع معايير WCAG.",
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "ضمان توافق المكونات مع معايير WCAG."
      },
      {
        question: "كيف تُدمج مع React؟",
        options: [
          "باستخدام CSS فقط.",
          "بتثبيت @chakra-ui/react وChakraProvider.",
          "باستخدام HTML فقط.",
          "بتقليل عدد العناصر."
        ],
        answer: "بتثبيت @chakra-ui/react وChakraProvider."
      },
      {
        question: "ما هي style props؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "خصائص مثل bg وcolor لتطبيق الأنماط.",
          "وسم HTML."
        ],
        answer: "خصائص مثل bg وcolor لتطبيق الأنماط."
      },
      {
        question: "كيف تُحسن الأداء؟",
        options: [
          "بإضافة المزيد من الصور.",
          "بتقليل عدد الوسوم.",
          "بتحميل المكونات حسب الحاجة.",
          "باستخدام CSS فقط."
        ],
        answer: "بتحميل المكونات حسب الحاجة."
      },
      {
        question: "ما هي Box؟",
        options: [
          "مكون أساسي يُستخدم كغلاف مرن.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "مكون أساسي يُستخدم كغلاف مرن."
      },
      {
        question: "كيف تُنشأ custom theme؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "بتعريف theme وتمريره إلى ChakraProvider.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "بتعريف theme وتمريره إلى ChakraProvider."
      },
      {
        question: "ما هي Stack؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "مكون لتجميع العناصر أفقيًا أو رأسيًا.",
          "خصائص CSS."
        ],
        answer: "مكون لتجميع العناصر أفقيًا أو رأسيًا."
      },
      {
        question: "كيف تُستخدم icons؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "باستيرادها من @chakra-ui/icons."
        ],
        answer: "باستيرادها من @chakra-ui/icons."
      },
      {
        question: "ما هي FormControl؟",
        options: [
          "مكون لإدارة حقول النماذج.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "مكون لإدارة حقول النماذج."
      },
      {
        question: "كيف تُنشأ modal؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستخدام Modal وModalOverlay.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام Modal وModalOverlay."
      },
      {
        question: "ما هي useToast؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "Hook لعرض إشعارات مؤقتة.",
          "وسم HTML."
        ],
        answer: "Hook لعرض إشعارات مؤقتة."
      },
      {
        question: "كيف تُعالج الأحداث؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "باستخدام props مثل onClick في المكونات."
        ],
        answer: "باستخدام props مثل onClick في المكونات."
      },
      {
        question: "ما هي Drawer؟",
        options: [
          "مكون لإنشاء قائمة جانبية.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "مكون لإنشاء قائمة جانبية."
      },
      {
        question: "كيف تُستخدم transitions؟",
        options: [
          "بإضافة المزيد من الصور.",
          "بتقليل عدد الوسوم.",
          "باستخدام Slide أو Fade.",
          "باستخدام CSS فقط."
        ],
        answer: "باستخدام Slide أو Fade."
      },
      {
        question: "ما هي color mode؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "تبديل بين الوضع الفاتح والداكن.",
          "خصائص CSS."
        ],
        answer: "تبديل بين الوضع الفاتح والداكن."
      },
      {
        question: "كيف تُنشأ form؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "باستخدام Input وFormControl."
        ],
        answer: "باستخدام Input وFormControl."
      }
    ]
  },
  {
    title: "Styled-Components",
    icon: <Box className="w-5 h-5 text-pink-300" />,
    questions: [
      {
        question: "ما هي Styled-Components؟",
        options: [
          "مكتبة لكتابة CSS داخل JavaScript.",
          "مكتبة لتحسين أداء JavaScript.",
          "إطار عمل لتطوير تطبيقات الخادم.",
          "أداة لإنشاء انتقالات بصرية."
        ],
        answer: "مكتبة لكتابة CSS داخل JavaScript."
      },
      {
        question: "كيف تُنشأ styled component؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "باستخدام styled.div`` لتحديد الأنماط.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "باستخدام styled.div`` لتحديد الأنماط."
      },
      {
        question: "ما هي theming؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "تخصيص الأنماط باستخدام ThemeProvider.",
          "وسم HTML."
        ],
        answer: "تخصيص الأنماط باستخدام ThemeProvider."
      },
      {
        question: "كيف تُطبق dynamic styling؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "باستخدام props في الأنماط."
        ],
        answer: "باستخدام props في الأنماط."
      },
      {
        question: "كيف تُحسن الأداء؟",
        options: [
          "بتقليل إعادة التحديث باستخدام memo.",
          "بإضافة المزيد من الصور.",
          "بتقليل عدد الوسوم.",
          "باستخدام CSS فقط."
        ],
        answer: "بتقليل إعادة التحديث باستخدام memo."
      },
      {
        question: "كيف تُدمج مع React؟",
        options: [
          "باستخدام CSS فقط.",
          "بتثبيت styled-components واستيراده.",
          "باستخدام HTML فقط.",
          "بتقليل عدد العناصر."
        ],
        answer: "بتثبيت styled-components واستيراده."
      },
      {
        question: "ما هي reusable styles؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "أنماط يمكن استخدامها في مكونات متعددة.",
          "خصائص CSS."
        ],
        answer: "أنماط يمكن استخدامها في مكونات متعددة."
      },
      {
        question: "كيف تُستخدم CSS؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "باستخدام خاصية CSS.",
          "بكتابة أنماط CSS داخل template literals.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "بكتابة أنماط CSS داخل template literals."
      },
      {
        question: "ما هي global styles؟",
        options: [
          "أنماط تُطبق على التطبيق باستخدام createGlobalStyle.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "أنماط تُطبق على التطبيق باستخدام createGlobalStyle."
      },
      {
        question: "كيف تُعالج الأحداث؟",
        options: [
          "بإنشاء أنماط CSS.",
          "باستخدام props في المكونات المنسقة.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام props في المكونات المنسقة."
      },
      {
        question: "ما هي keyframes؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "تحديد رسوم متحركة باستخدام keyframes.",
          "خصائص CSS."
        ],
        answer: "تحديد رسوم متحركة باستخدام keyframes."
      },
      {
        question: "كيف تُنشأ animation؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript.",
          "بتعريف keyframes وتطبيقها في الأنماط."
        ],
        answer: "بتعريف keyframes وتطبيقها في الأنماط."
      },
      {
        question: "ما هي attrs؟",
        options: [
          "إضافة سمات HTML إلى المكونات المنسقة.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "إضافة سمات HTML إلى المكونات المنسقة."
      },
      {
        question: "كيف تُستخدم nested styles؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بكتابة أنماط داخل الأنماط مثل CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بكتابة أنماط داخل الأنماط مثل CSS."
      },
      {
        question: "ما هي shouldForwardProp؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "تصفية props غير المرغوبة.",
          "وسم HTML."
        ],
        answer: "تصفية props غير المرغوبة."
      },
      {
        question: "كيف تُدمج مع TypeScript؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "بتعريف أنواع لـ props في المكونات."
        ],
        answer: "بتعريف أنواع لـ props في المكونات."
      },
      {
        question: "ما هي CSS helpers؟",
        options: [
          "دوال مثل css لإنشاء أنماط ديناميكية.",
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "دوال مثل css لإنشاء أنماط ديناميكية."
      },
      {
        question: "كيف تُنشأ theme؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "بتعريف كائن theme وتمريره إلى ThemeProvider.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "بتعريف كائن theme وتمريره إلى ThemeProvider."
      },
      {
        question: "ما هي pseudo-classes؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "أنماط مثل :hover تُطبق في styled-components.",
          "خصائص CSS."
        ],
        answer: "أنماط مثل :hover تُطبق في styled-components."
      },
      {
        question: "كيف تُستخدم media queries؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript.",
          "بكتابتها داخل الأنماط للتجاوب."
        ],
        answer: "بكتابتها داخل الأنماط للتجاوب."
      }
    ]
  },
  {
    title: "Axios",
    icon: <Box className="w-5 h-5 text-green-300" />,
    questions: [
      {
        question: "ما هي Axios؟",
        options: [
          "مكتبة لإجراء طلبات HTTP في الويب.",
          "مكتبة لتحسين أداء JavaScript.",
          "إطار عمل لتطوير تطبيقات الخادم.",
          "أداة لإنشاء انتقالات بصرية."
        ],
        answer: "مكتبة لإجراء طلبات HTTP في الويب."
      },
      {
        question: "كيف تُجري طلب GET؟",
        options: [
          "بإنشاء كائن HTML جديد.",
          "باستخدام axios.get(url).",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "باستخدام axios.get(url)."
      },
      {
        question: "كيف تُجري طلب POST؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "باستخدام axios.post(url, data).",
          "بإضافة صور."
        ],
        answer: "باستخدام axios.post(url, data)."
      },
      {
        question: "ما هي response handling؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "معالجة الردود باستخدام .then أو async/await."
        ],
        answer: "معالجة الردود باستخدام .then أو async/await."
      },
      {
        question: "كيف تُعالج الأخطاء؟",
        options: [
          "باستخدام .catch أو try/catch.",
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام .catch أو try/catch."
      },
      {
        question: "ما هي interceptors؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "وظائف تُعدل الطلبات أو الردود.",
          "خصائص CSS."
        ],
        answer: "وظائف تُعدل الطلبات أو الردود."
      },
      {
        question: "كيف تُنشأ instance؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "باستخدام axios.create() لتكوين مخصص.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "باستخدام axios.create() لتكوين مخصص."
      },
      {
        question: "كيف تُدمج مع React؟",
        options: [
          "باستخدام CSS فقط.",
          "بتنفيذ الطلبات داخل useEffect.",
          "باستخدام HTML فقط.",
          "بتقليل عدد العناصر."
        ],
        answer: "بتنفيذ الطلبات داخل useEffect."
      },
      {
        question: "ما هي headers؟",
        options: [
          "رؤوس الطلب مثل Authorization.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "رؤوس الطلب مثل Authorization."
      },
      {
        question: "كيف تُستخدم query params؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بإضافتها في params أو URL.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بإضافتها في params أو URL."
      },
      {
        question: "ما هي cancel token؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "إلغاء الطلبات باستخدام CancelToken.",
          "خصائص CSS."
        ],
        answer: "إلغاء الطلبات باستخدام CancelToken."
      },
      {
        question: "كيف تُحسن الأداء؟",
        options: [
          "بإضافة المزيد من الصور.",
          "بتقليل عدد الوسوم.",
          "بتقليل الطلبات واستخدام caching.",
          "باستخدام CSS فقط."
        ],
        answer: "بتقليل الطلبات واستخدام caching."
      },
      {
        question: "كيف تُدمج مع Angular؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتنفيذ الطلبات في services.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتنفيذ الطلبات في services."
      },
      {
        question: "كيف تُدمج مع Vue.js؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "بتنفيذ الطلبات في methods أو asyncData."
        ],
        answer: "بتنفيذ الطلبات في methods أو asyncData."
      },
      {
        question: "ما هي defaults؟",
        options: [
          "إعدادات افتراضية لتكوين Axios.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "إعدادات افتراضية لتكوين Axios."
      },
      {
        question: "كيف تُجري concurrent requests؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "باستخدام axios.all().",
          "بإضافة صور."
        ],
        answer: "باستخدام axios.all()."
      },
      {
        question: "ما هي transformRequest؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "تعديل البيانات قبل إرسال الطلب.",
          "خصائص CSS."
        ],
        answer: "تعديل البيانات قبل إرسال الطلب."
      },
      {
        question: "كيف تُستخدم FormData؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "لإرسال ملفات أو بيانات معقدة."
        ],
        answer: "لإرسال ملفات أو بيانات معقدة."
      },
      {
        question: "ما هي responseType؟",
        options: [
          "تحديد نوع الرد مثل json أو blob.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "تحديد نوع الرد مثل json أو blob."
      },
      {
        question: "كيف تُستخدم timeout؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد مهلة للطلب في التكوين.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتحديد مهلة للطلب في التكوين."
      }
    ]
  },
  {
    title: "React Query",
    icon: <Box className="w-5 h-5 text-yellow-300" />,
    questions: [
      {
        question: "ما هي React Query؟",
        options: [
          "مكتبة لإدارة البيانات في React.",
          "مكتبة لتحسين أداء JavaScript.",
          "إطار عمل لتطوير تطبيقات الخادم.",
          "أداة لإنشاء انتقالات بصرية."
        ],
        answer: "مكتبة لإدارة البيانات في React."
      },
      {
        question: "كيف تُجري data fetching؟",
        options: [
          "بإنشاء وسم HTML جديد.",
          "باستخدام useQuery لجلب البيانات.",
          "باستخدام خاصية CSS.",
          "بإنشاء دالة JavaScript."
        ],
        answer: "باستخدام useQuery لجلب البيانات."
      },
      {
        question: "ما هي caching؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "تخزين البيانات مؤقتًا لتقليل الطلبات.",
          "وسم HTML."
        ],
        answer: "تخزين البيانات مؤقتًا لتقليل الطلبات."
      },
      {
        question: "كيف تُنشأ mutation؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "باستخدام useMutation لتعديل البيانات."
        ],
        answer: "باستخدام useMutation لتعديل البيانات."
      },
      {
        question: "ما هي query invalidation؟",
        options: [
          "إبطال البيانات لتحديثها.",
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "خصائص CSS."
        ],
        answer: "إبطال البيانات لتحديثها."
      },
      {
        question: "كيف تُحسن API calls؟",
        options: [
          "بإضافة المزيد من الصور.",
          "بتفعيل caching وrefetching ذكي.",
          "بتقليل عدد الوسوم.",
          "باستخدام CSS فقط."
        ],
        answer: "بتفعيل caching وrefetching ذكي."
      },
      {
        question: "كيف تُدمج مع React؟",
        options: [
          "باستخدام CSS فقط.",
          "باستخدام HTML فقط.",
          "بتثبيت @tanstack/react-query.",
          "بتقليل عدد العناصر."
        ],
        answer: "بتثبيت @tanstack/react-query."
      },
      {
        question: "ما هي loading states؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "حالات مثل isLoading لإدارة التحميل.",
          "وسم HTML."
        ],
        answer: "حالات مثل isLoading لإدارة التحميل."
      },
      {
        question: "كيف تُعالج الأخطاء؟",
        options: [
          "باستخدام error في useQuery.",
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "باستخدام error في useQuery."
      },
      {
        question: "ما هي query keys؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "معرفات فريدة لتخزين البيانات.",
          "خصائص CSS."
        ],
        answer: "معرفات فريدة لتخزين البيانات."
      },
      {
        question: "كيف تُستخدم useQueries؟",
        options: [
          "بإنشاء أنماط CSS.",
          "لإجراء استعلامات متعددة دفعة واحدة.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "لإجراء استعلامات متعددة دفعة واحدة."
      },
      {
        question: "ما هي refetch؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "إعادة جلب البيانات يدويًا أو تلقائيًا.",
          "وسم HTML."
        ],
        answer: "إعادة جلب البيانات يدويًا أو تلقائيًا."
      },
      {
        question: "كيف تُنشأ optimistic updates؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بتحديث الواجهة قبل تأكيد المصدر.",
          "بإضافة صور."
        ],
        answer: "بتحديث الواجهة قبل تأكيد المصدر."
      },
      {
        question: "ما هي staleTime؟",
        options: [
          "مدة صلاحية البيانات في الـ cache.",
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "وسم HTML."
        ],
        answer: "مدة صلاحية البيانات في الـ cache."
      },
      {
        question: "كيف تُستخدم cacheTime؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "بإضافة صور.",
          "لتحديد مدة بقاء البيانات في الـ cache."
        ],
        answer: "لتحديد مدة بقاء البيانات في الـ cache."
      },
      {
        question: "ما هي enabled option؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "تفعيل أو تعطيل الاستعلام تلقائيًا.",
          "خصائص CSS."
        ],
        answer: "تفعيل أو تعطيل الاستعلام تلقائيًا."
      },
      {
        question: "كيف تُدمج مع Axios؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتنفيذ طلبات Axios داخل useQuery.",
          "بتحديد حجم النصوص.",
          "بإضافة صور."
        ],
        answer: "بتنفيذ طلبات Axios داخل useQuery."
      },
      {
        question: "ما هي useInfiniteQuery؟",
        options: [
          "مكتبة لتحسين الأداء.",
          "خاصية CSS.",
          "لجلب البيانات بشكل تدريجي مثل التمرير.",
          "وسم HTML."
        ],
        answer: "لجلب البيانات بشكل تدريجي مثل التمرير."
      },
      {
        question: "كيف تُعالج pagination؟",
        options: [
          "بإنشاء أنماط CSS.",
          "بتحديد حجم النصوص.",
          "باستخدام useInfiniteQuery أو query params.",
          "بإضافة صور."
        ],
        answer: "باستخدام useInfiniteQuery أو query params."
      },
      {
        question: "ما هي Devtools؟",
        options: [
          "مكتبات لتحسين الأداء.",
          "وسوم HTML.",
          "أداة لتتبع الاستعلامات والـ cache.",
          "خصائص CSS."
        ],
        answer: "أداة لتتبع الاستعلامات والـ cache."
      }
    ]
  }
];

// Define TypeScript interfaces
// const QuestionsFrontEnd: React.FC = () => {
export default function QuestionsFrontEnd(){
  const [selectedSkill, setSelectedSkill] = useState<number>(0); // chose the skill 
  const [currentQuestion, setCurrentQuestion] = useState<number>(0); // questions to current skill
  const [userAnswers, setUserAnswers] = useState<(string | null)[]>(Array(quizData[0].questions.length).fill(null));
  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);
  const [score, setScore] = useState<number | null>(null);
  const [timeLeft, setTimeLeft] = useState<number>(600); // 10 minutes in seconds

  const currentSkill = quizData[selectedSkill];
  const questions = currentSkill.questions;
  const totalQuestions = questions.length;

  // Timer logic
  useEffect((): any =>{
    if (timeLeft > 0 && !isSubmitted) {
      const timer = setInterval(() => {
        setTimeLeft((prev) => {
          if (prev <= 1) {
            submitQuiz();
            return 0;
          }
          return prev - 1;
        });
      }, 1000);
      return () => clearInterval(timer);
    }
  }, [timeLeft, isSubmitted]);

  // Format time as MM:SS
  const formatTime = (seconds: number): string => {
    const minutes = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${minutes.toString().padStart(2, "0")}:${secs.toString().padStart(2, "0")}`;
  };

  // Handle option selection
  const selectOption = (option: string) => {
    if (!isSubmitted) {
      const newAnswers = [...userAnswers];
      newAnswers[currentQuestion] = option;
      setUserAnswers(newAnswers);
    }
  };

  // Navigate to next question
  const nextQuestion = () => {
    if (currentQuestion < totalQuestions - 1) {
      setCurrentQuestion((prev) => prev + 1);
    }
  };

  // Navigate to previous question
  const prevQuestion = () => {
    if (currentQuestion > 0) {
      setCurrentQuestion((prev) => prev - 1);
    }
  };

  // Submit quiz and calculate score
  const submitQuiz = () => {
    if (!isSubmitted) {
      const calculatedScore = userAnswers.reduce((acc, answer, index) => {
        return answer === questions[index].answer ? acc + 1 : acc;
      }, 0);
      setScore(calculatedScore);
      setIsSubmitted(true);
    }
  };

  // Reset quiz
  const resetQuiz = () => {
    setUserAnswers(Array(totalQuestions).fill(null));
    setCurrentQuestion(0);
    setIsSubmitted(false);
    setScore(null);
    setTimeLeft(600); // Reset timer to 10 minutes
  };

  // Check if all questions are answered
  const allQuestionsAnswered = userAnswers.every((answer) => answer !== null);

  const bgColor = useContext(BgContext);

  // Animation variants for flicker effect
  const flickerVariants = {
    initial: { opacity: 0.3 },
    animate: {
      opacity: [0.3, 1, 0.5, 1, 0.7, 1],
      transition: { duration: 0.5, times: [0, 0.2, 0.4, 0.6, 0.8, 1] }
    }
  };

  // Animation variants for shake effect
  const shakeVariants = {
    animate: {
      x: [-5, 5, -5, 5, 0],
      transition: { duration: 0.3, times: [0, 0.25, 0.5, 0.75, 1] }
    }
  };

  return (
    <div
      className={`min-h-screen mt-15 bg-gradient-to-b from-black to-red-900 flex flex-col items-center justify-center p-4 ${bgColor.color}/90 font-creepster`}
      dir="rtl"
      style={{ fontFamily: "'Creepster', cursive" }} // Assuming Creepster font is loaded
    >
      {/* Timer */}
      <motion.div
        className="mb-4 text-2xl text-red-500 font-bold"
        initial={{ opacity: 0, scale: 0.8 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{ duration: 0.5 }}
      >
        الوقت المتبقي: {formatTime(timeLeft)}
      </motion.div>

      {/* Skill selection */}
      <div className="mb-6 flex flex-wrap gap-4 justify-center" dir="ltr">
        {quizData.map((skill, index) => (
          <motion.button
            key={index}
            onClick={() => {
              setSelectedSkill(index);
              setCurrentQuestion(0);
              setUserAnswers(Array(skill.questions.length).fill(null));
              setIsSubmitted(false);
              setScore(null);
              setTimeLeft(600);
            }}
            className={`px-4 py-2 rounded-lg flex items-center gap-2 cursor-pointer ${
              selectedSkill === index ? "bg-red-700 text-white" : "bg-gray-800 text-red-400"
            } shadow-lg hover:bg-red-600 transition-colors duration-300 border border-red-500`}
            whileHover={{ scale: 1.1, rotate: 3 }}
            whileTap={{ scale: 0.9 }}
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.3, delay: index * 0.1 }}
          >
            {skill.icon}
            <span>{skill.title}</span>
          </motion.button>
        ))}
      </div>

      {/* Quiz card */}
      <motion.div
        className="bg-gray-900 rounded-lg shadow-2xl p-6 w-full max-w-md border border-red-700"
        initial={{ opacity: 0, scale: 0.8 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{ duration: 0.5 }}
      >
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-2xl font-bold flex items-center gap-2 text-red-500">
            {currentSkill.icon}
            {currentSkill.title}
          </h2>
          <span className="text-gray-400">
            {currentQuestion + 1} / {totalQuestions}
          </span>
        </div>

        {/* Question */}
        <AnimatePresence mode="wait">
          <motion.div
            key={currentQuestion}
            initial={{ opacity: 0, x: 50, scale: 0.9 }}
            animate={{ opacity: 1, x: 0, scale: 1 }}
            exit={{ opacity: 0, x: -50, scale: 0.9 }}
            transition={{ duration: 0.4, ease: "easeInOut" }}
            className="mb-4"
          >
            <p className="text-xl text-white font-semibold">{questions[currentQuestion].question}</p>
          </motion.div>
        </AnimatePresence>

        {/* Options */}
        <div className="space-y-3 mb-4">
          {questions[currentQuestion].options.map((option, index) => (
            <motion.button
              key={index}
              onClick={() => selectOption(option)}
              className={`w-full p-3 rounded-lg text-right border ${
                isSubmitted
                  ? option === questions[currentQuestion].answer
                    ? "bg-green-700 text-white border-green-500"
                    : userAnswers[currentQuestion] === option
                    ? "bg-red-700 text-white border-red-500"
                    : "bg-gray-800 text-gray-300 border-gray-600"
                  : userAnswers[currentQuestion] === option
                  ? "bg-red-600 text-white border-red-500"
                  : "bg-gray-800 text-gray-300 border-gray-600 hover:bg-gray-700"
              } transition-colors duration-300`}
              whileHover={{ scale: 1.03, boxShadow: "0 4px 12px rgba(255,0,0,0.3)" }}
              whileTap={{ scale: 0.97 }}
              variants={isSubmitted && userAnswers[currentQuestion] === option && option !== questions[currentQuestion].answer ? shakeVariants : {}}
              animate={isSubmitted && userAnswers[currentQuestion] === option && option !== questions[currentQuestion].answer ? "animate" : ""}
              disabled={isSubmitted && !allQuestionsAnswered}
            >
              {option}
            </motion.button>
          ))}
        </div>

        {/* Result */}
        {isSubmitted && (
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5, ease: "easeInOut" }}
            className="mb-4 p-4 bg-gray-800 rounded-lg text-center border border-red-600"
          >
            <p className="text-2xl font-bold text-red-500">
              درجتك: {score}/{totalQuestions}
            </p>
            <p className="text-gray-300 mt-2">لقد نجوت من الاختبار... أم لا؟</p>
            <motion.button
              onClick={resetQuiz}
              className="mt-4 px-4 py-2 bg-red-700 text-white rounded-lg hover:bg-red-600 transition-colors duration-300 border border-red-500"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              إعادة المحاولة
            </motion.button>
          </motion.div>
        )}

        {/* Navigation buttons */}
        <div className="flex justify-between items-center">
          <motion.button
            onClick={prevQuestion}
            className={`p-2 bg-gray-800 rounded-full hover:bg-red-600 transition-colors duration-300 border border-red-500 ${
              currentQuestion === 0 ? "opacity-50 cursor-not-allowed" : ""
            }`}
            whileHover={{ scale: 1.1, rotate: -5 }}
            whileTap={{ scale: 0.9 }}
            disabled={currentQuestion === 0}
            variants={flickerVariants}
            initial= "initial"
            animate="animate"
          >
            <ChevronLeft className="w-6 h-6 text-red-500" />
          </motion.button>

          {!isSubmitted && allQuestionsAnswered && currentQuestion === totalQuestions - 1 && (
            <motion.button
              onClick={submitQuiz}
              className="px-4 py-2 bg-red-700 text-white rounded-lg flex items-center gap-2 hover:bg-red-600 transition-colors duration-300 border border-red-500"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ duration: 0.3 }}
            >
              <CheckCircle className="w-5 h-5 text-white" />
              <span>تسليم الاختبار</span>
            </motion.button>
          )}

          <motion.button
            onClick={nextQuestion}
            className={`p-2 bg-gray-800 rounded-full hover:bg-red-600 transition-colors duration-300 border border-red-500 ${
              currentQuestion === totalQuestions - 1 ? "opacity-50 cursor-not-allowed" : ""
            }`}
            whileHover={{ scale: 1.1, rotate: 5 }}
            whileTap={{ scale: 0.9 }}
            disabled={currentQuestion === totalQuestions - 1}
            variants={flickerVariants}
            initial= "initial"
            animate="animate"
          >
            <ChevronRight className="w-6 h-6 text-red-500" />
          </motion.button>
        </div>
      </motion.div>
    </div>
  );
};


